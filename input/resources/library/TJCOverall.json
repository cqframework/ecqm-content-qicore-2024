{
  "resourceType": "Library",
  "id": "TJCOverall",
  "meta": {
    "profile": [ "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/computable-library-cqfm" ]
  },
  "language": "en",
  "text": {
    "status": "extensions",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n    <table class=\"grid dict\">\n\n        \n            <tr>\n                <th scope=\"row\"><b>Title: </b></th>\n                <td style=\"padding-left: 4px;\">TJCOverall</td>\n            </tr>\n        \n\n\n        \n            <tr>\n                <th scope=\"row\"><b>Id: </b></th>\n                <td style=\"padding-left: 4px;\">TJCOverall</td>\n            </tr>\n        \n\n\n        \n            <tr>\n                <th scope=\"row\"><b>Version: </b></th>\n                <td style=\"padding-left: 4px;\">8.11.000</td>\n            </tr>\n        \n\n        \n            <tr>\n                <th scope=\"row\"><b>Url: </b></th>\n                <td style=\"padding-left: 4px;\">https://madie.cms.gov/Library/TJCOverall</td>\n            </tr>\n        \n\n        \n            <tr>\n                <th scope=\"row\">\n                    <b>\n                        \n                            official\n                        \n                    </b>\n                </th>\n                <td style=\"padding-left: 4px;\">\n                    \n                        <p style=\"margin-bottom: 5px;\">\n                            <span>653fefc50da4c65b6be7e5d3</span>\n                        </p>\n                    \n                </td>\n            </tr>\n        \n\n        \n            <tr>\n                <th scope=\"row\"><b>Name: </b></th>\n                <td style=\"padding-left: 4px;\">TJCOverall</td>\n            </tr>\n        \n\n        \n\n        \n            <tr>\n                <th scope=\"row\"><b>Status: </b></th>\n                <td style=\"padding-left: 4px;\">active</td>\n            </tr>\n        \n\n        \n\n        \n            <tr>\n                <th scope=\"row\"><b>Type: </b></th>\n                <td style=\"padding-left: 4px;\">\n                    \n                        \n                            \n                                <p style=\"margin-bottom: 5px;\">\n                                    <b>system: </b> <span>http://terminology.hl7.org/CodeSystem/library-type</span>\n                                </p>\n                            \n                            \n                                <p style=\"margin-bottom: 5px;\">\n                                    <b>code: </b> <span>logic-library</span>\n                                </p>\n                            \n                            \n                        \n                    \n                    \n                </td>\n            </tr>\n        \n\n        \n\n        \n            <tr>\n                <th scope=\"row\"><b>Date: </b></th>\n                <td style=\"padding-left: 4px;\">2023-11-22T18:42:45+00:00</td>\n            </tr>\n        \n\n        \n            <tr>\n                <th scope=\"row\"><b>Publisher: </b></th>\n                <td style=\"padding-left: 4px;\">The Joint Commission</td>\n            </tr>\n        \n\n        \n            <tr>\n                <th scope=\"row\"><b>Description: </b></th>\n                <td style=\"padding-left: 4px;\">Common functions and definitions used by TJC measures</td>\n            </tr>\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n            <tr>\n                <th scope=\"row\"><b>Related Artifacts: </b></th>\n                <td style=\"padding-left: 4px;\">\n                    \n                    \n                    \n                        <p><b>Dependencies</b></p>\n                        <ul>\n                            \n                                <li>http://cts.nlm.nih.gov/fhir/ValueSet/1.3.6.1.4.1.33895.1.3.0.45</li>\n                            \n                                <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.207</li>\n                            \n                                <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.209</li>\n                            \n                                <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.212</li>\n                            \n                                <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.247</li>\n                            \n                                <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.308</li>\n                            \n                                <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.309</li>\n                            \n                                <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.424</li>\n                            \n                                <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.87</li>\n                            \n                                <li>https://madie.cms.gov/Library/CQMCommon|2.0.000</li>\n                            \n                                <li>https://madie.cms.gov/Library/FHIRHelpers|4.3.000</li>\n                            \n                                <li>https://madie.cms.gov/Library/QICoreCommon|2.0.000</li>\n                            \n                        </ul>\n                    \n                    \n                    \n                    \n                    \n                </td>\n            </tr>\n        \n\n        \n\n        \n            <tr>\n                <th scope=\"row\"><b>Data Requirements:</b></th>\n                <td style=\"padding-left: 4px;\">\n                    <table class=\"grid-dict\">\n                        <tr><th><b>Type</b></th><th><b>Profile</b></th><th><b>MS</b></th><th><b>Code Filter</b></th></tr>\n                        \n                            <tr>\n                                <th>Encounter</th>\n                                <th></th>\n                                <th></th>\n                                <th>\n                                    \n                                        <b>code filter: </b>\n                                        \n                                            <br/>\n                                        \n                                        \n                                            <span style=\"padding-left: 4px;\">\n                          <b>path: </b><span>code</span>\n                      </span>\n                                            \n                                                <br/>\n                                            \n                                        \n                                        \n                                            <span style=\"padding-left: 4px;\">\n                          <b>value set: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.424</span>\n                      </span>\n                                        \n                                        \n                                    \n                                </th>\n                            </tr>\n                        \n                            <tr>\n                                <th>ServiceRequest</th>\n                                <th></th>\n                                <th></th>\n                                <th>\n                                    \n                                        <b>code filter: </b>\n                                        \n                                            <br/>\n                                        \n                                        \n                                            <span style=\"padding-left: 4px;\">\n                          <b>path: </b><span>code</span>\n                      </span>\n                                            \n                                                <br/>\n                                            \n                                        \n                                        \n                                            <span style=\"padding-left: 4px;\">\n                          <b>value set: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/1.3.6.1.4.1.33895.1.3.0.45</span>\n                      </span>\n                                        \n                                        \n                                    \n                                </th>\n                            </tr>\n                        \n                            <tr>\n                                <th>Procedure</th>\n                                <th></th>\n                                <th></th>\n                                <th>\n                                    \n                                        <b>code filter: </b>\n                                        \n                                            <br/>\n                                        \n                                        \n                                            <span style=\"padding-left: 4px;\">\n                          <b>path: </b><span>code</span>\n                      </span>\n                                            \n                                                <br/>\n                                            \n                                        \n                                        \n                                            <span style=\"padding-left: 4px;\">\n                          <b>value set: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/1.3.6.1.4.1.33895.1.3.0.45</span>\n                      </span>\n                                        \n                                        \n                                    \n                                </th>\n                            </tr>\n                        \n                    </table>\n                </td>\n            </tr>\n        \n\n        \n            \n                <tr>\n                    <td colspan=\"2\">\n                        <table>\n                            <tr><th><a id=\"cql-content\"><b>Content: </b></a> text/cql</th></tr>\n                            <tr><td><pre><code class=\"language-cql\">[108, 105, 98, 114, 97, 114, 121, 32, 84, 74, 67, 79, 118, 101, 114, 97, 108, 108, 32, 118, 101, 114, 115, 105, 111, 110, 32, 39, 56, 46, 49, 49, 46, 48, 48, 48, 39, 10, 10, 10, 117, 115, 105, 110, 103, 32, 81, 73, 67, 111, 114, 101, 32, 118, 101, 114, 115, 105, 111, 110, 32, 39, 52, 46, 49, 46, 49, 39, 10, 10, 105, 110, 99, 108, 117, 100, 101, 32, 70, 72, 73, 82, 72, 101, 108, 112, 101, 114, 115, 32, 118, 101, 114, 115, 105, 111, 110, 32, 39, 52, 46, 51, 46, 48, 48, 48, 39, 32, 99, 97, 108, 108, 101, 100, 32, 70, 72, 73, 82, 72, 101, 108, 112, 101, 114, 115, 10, 105, 110, 99, 108, 117, 100, 101, 32, 67, 81, 77, 67, 111, 109, 109, 111, 110, 32, 32, 32, 118, 101, 114, 115, 105, 111, 110, 32, 39, 50, 46, 48, 46, 48, 48, 48, 39, 32, 99, 97, 108, 108, 101, 100, 32, 67, 81, 77, 67, 111, 109, 109, 111, 110, 10, 105, 110, 99, 108, 117, 100, 101, 32, 81, 73, 67, 111, 114, 101, 67, 111, 109, 109, 111, 110, 32, 118, 101, 114, 115, 105, 111, 110, 32, 39, 50, 46, 48, 46, 48, 48, 48, 39, 32, 99, 97, 108, 108, 101, 100, 32, 81, 73, 67, 111, 114, 101, 67, 111, 109, 109, 111, 110, 10, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 67, 111, 109, 102, 111, 114, 116, 32, 77, 101, 97, 115, 117, 114, 101, 115, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 49, 46, 51, 46, 54, 46, 49, 46, 52, 46, 49, 46, 51, 51, 56, 57, 53, 46, 49, 46, 51, 46, 48, 46, 52, 53, 39, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 68, 105, 115, 99, 104, 97, 114, 103, 101, 32, 84, 111, 32, 65, 99, 117, 116, 101, 32, 67, 97, 114, 101, 32, 70, 97, 99, 105, 108, 105, 116, 121, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 49, 49, 55, 46, 49, 46, 55, 46, 49, 46, 56, 55, 39, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 68, 105, 115, 99, 104, 97, 114, 103, 101, 100, 32, 116, 111, 32, 72, 101, 97, 108, 116, 104, 32, 67, 97, 114, 101, 32, 70, 97, 99, 105, 108, 105, 116, 121, 32, 102, 111, 114, 32, 72, 111, 115, 112, 105, 99, 101, 32, 67, 97, 114, 101, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 49, 49, 55, 46, 49, 46, 55, 46, 49, 46, 50, 48, 55, 39, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 68, 105, 115, 99, 104, 97, 114, 103, 101, 100, 32, 116, 111, 32, 72, 111, 109, 101, 32, 102, 111, 114, 32, 72, 111, 115, 112, 105, 99, 101, 32, 67, 97, 114, 101, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 49, 49, 55, 46, 49, 46, 55, 46, 49, 46, 50, 48, 57, 39, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 72, 101, 109, 111, 114, 114, 104, 97, 103, 105, 99, 32, 83, 116, 114, 111, 107, 101, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 49, 49, 55, 46, 49, 46, 55, 46, 49, 46, 50, 49, 50, 39, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 73, 115, 99, 104, 101, 109, 105, 99, 32, 83, 116, 114, 111, 107, 101, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 49, 49, 55, 46, 49, 46, 55, 46, 49, 46, 50, 52, 55, 39, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 76, 101, 102, 116, 32, 65, 103, 97, 105, 110, 115, 116, 32, 77, 101, 100, 105, 99, 97, 108, 32, 65, 100, 118, 105, 99, 101, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 49, 49, 55, 46, 49, 46, 55, 46, 49, 46, 51, 48, 56, 39, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 78, 111, 110, 101, 108, 101, 99, 116, 105, 118, 101, 32, 73, 110, 112, 97, 116, 105, 101, 110, 116, 32, 69, 110, 99, 111, 117, 110, 116, 101, 114, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 49, 49, 55, 46, 49, 46, 55, 46, 49, 46, 52, 50, 52, 39, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 80, 97, 116, 105, 101, 110, 116, 32, 69, 120, 112, 105, 114, 101, 100, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 49, 49, 55, 46, 49, 46, 55, 46, 49, 46, 51, 48, 57, 39, 10, 10, 112, 97, 114, 97, 109, 101, 116, 101, 114, 32, 34, 77, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 32, 80, 101, 114, 105, 111, 100, 34, 32, 73, 110, 116, 101, 114, 118, 97, 108, 60, 68, 97, 116, 101, 84, 105, 109, 101, 62, 10, 10, 99, 111, 110, 116, 101, 120, 116, 32, 80, 97, 116, 105, 101, 110, 116, 10, 10, 10, 100, 101, 102, 105, 110, 101, 32, 34, 78, 111, 110, 32, 69, 108, 101, 99, 116, 105, 118, 101, 32, 73, 110, 112, 97, 116, 105, 101, 110, 116, 32, 69, 110, 99, 111, 117, 110, 116, 101, 114, 34, 58, 10, 32, 32, 91, 34, 69, 110, 99, 111, 117, 110, 116, 101, 114, 34, 58, 32, 34, 78, 111, 110, 101, 108, 101, 99, 116, 105, 118, 101, 32, 73, 110, 112, 97, 116, 105, 101, 110, 116, 32, 69, 110, 99, 111, 117, 110, 116, 101, 114, 34, 93, 32, 78, 111, 110, 69, 108, 101, 99, 116, 105, 118, 101, 69, 110, 99, 111, 117, 110, 116, 101, 114, 10, 32, 32, 32, 32, 32, 32, 32, 32, 119, 104, 101, 114, 101, 32, 78, 111, 110, 69, 108, 101, 99, 116, 105, 118, 101, 69, 110, 99, 111, 117, 110, 116, 101, 114, 46, 112, 101, 114, 105, 111, 100, 32, 101, 110, 100, 115, 32, 100, 117, 114, 105, 110, 103, 32, 100, 97, 121, 32, 111, 102, 32, 34, 77, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 32, 80, 101, 114, 105, 111, 100, 34, 10, 10, 100, 101, 102, 105, 110, 101, 32, 34, 65, 108, 108, 32, 83, 116, 114, 111, 107, 101, 32, 69, 110, 99, 111, 117, 110, 116, 101, 114, 34, 58, 10, 32, 32, 34, 78, 111, 110, 32, 69, 108, 101, 99, 116, 105, 118, 101, 32, 73, 110, 112, 97, 116, 105, 101, 110, 116, 32, 69, 110, 99, 111, 117, 110, 116, 101, 114, 34, 32, 78, 111, 110, 69, 108, 101, 99, 116, 105, 118, 101, 69, 110, 99, 111, 117, 110, 116, 101, 114, 10, 32, 32, 108, 101, 116, 32, 67, 111, 110, 100, 105, 116, 105, 111, 110, 67, 111, 100, 101, 58, 32, 78, 111, 110, 69, 108, 101, 99, 116, 105, 118, 101, 69, 110, 99, 111, 117, 110, 116, 101, 114, 46, 112, 114, 105, 110, 99, 105, 112, 97, 108, 68, 105, 97, 103, 110, 111, 115, 105, 115, 40, 41, 46, 99, 111, 100, 101, 10, 32, 32, 32, 32, 119, 104, 101, 114, 101, 32, 40, 32, 67, 111, 110, 100, 105, 116, 105, 111, 110, 67, 111, 100, 101, 32, 105, 110, 32, 34, 72, 101, 109, 111, 114, 114, 104, 97, 103, 105, 99, 32, 83, 116, 114, 111, 107, 101, 34, 10, 32, 32, 32, 32, 32, 32, 32, 111, 114, 32, 32, 32, 67, 111, 110, 100, 105, 116, 105, 111, 110, 67, 111, 100, 101, 32, 105, 110, 32, 34, 73, 115, 99, 104, 101, 109, 105, 99, 32, 83, 116, 114, 111, 107, 101, 34, 32, 41, 32, 32, 10, 10, 100, 101, 102, 105, 110, 101, 32, 34, 73, 115, 99, 104, 101, 109, 105, 99, 32, 83, 116, 114, 111, 107, 101, 32, 69, 110, 99, 111, 117, 110, 116, 101, 114, 34, 58, 10, 32, 32, 34, 69, 110, 99, 111, 117, 110, 116, 101, 114, 32, 119, 105, 116, 104, 32, 80, 114, 105, 110, 99, 105, 112, 97, 108, 32, 68, 105, 97, 103, 110, 111, 115, 105, 115, 32, 97, 110, 100, 32, 65, 103, 101, 34, 32, 69, 110, 99, 111, 117, 110, 116, 101, 114, 87, 105, 116, 104, 65, 103, 101, 10, 32, 32, 32, 32, 119, 104, 101, 114, 101, 32, 69, 110, 99, 111, 117, 110, 116, 101, 114, 87, 105, 116, 104, 65, 103, 101, 46, 112, 114, 105, 110, 99, 105, 112, 97, 108, 68, 105, 97, 103, 110, 111, 115, 105, 115, 40, 41, 46, 99, 111, 100, 101, 32, 105, 110, 32, 34, 73, 115, 99, 104, 101, 109, 105, 99, 32, 83, 116, 114, 111, 107, 101, 34, 10, 10, 100, 101, 102, 105, 110, 101, 32, 34, 73, 115, 99, 104, 101, 109, 105, 99, 32, 83, 116, 114, 111, 107, 101, 32, 69, 110, 99, 111, 117, 110, 116, 101, 114, 115, 32, 119, 105, 116, 104, 32, 68, 105, 115, 99, 104, 97, 114, 103, 101, 32, 68, 105, 115, 112, 111, 115, 105, 116, 105, 111, 110, 34, 58, 10, 32, 32, 34, 73, 115, 99, 104, 101, 109, 105, 99, 32, 83, 116, 114, 111, 107, 101, 32, 69, 110, 99, 111, 117, 110, 116, 101, 114, 34, 32, 73, 115, 99, 104, 101, 109, 105, 99, 83, 116, 114, 111, 107, 101, 69, 110, 99, 111, 117, 110, 116, 101, 114, 10, 32, 32, 108, 101, 116, 32, 68, 105, 115, 99, 104, 68, 105, 115, 112, 58, 32, 73, 115, 99, 104, 101, 109, 105, 99, 83, 116, 114, 111, 107, 101, 69, 110, 99, 111, 117, 110, 116, 101, 114, 46, 104, 111, 115, 112, 105, 116, 97, 108, 105, 122, 97, 116, 105, 111, 110, 46, 100, 105, 115, 99, 104, 97, 114, 103, 101, 68, 105, 115, 112, 111, 115, 105, 116, 105, 111, 110, 10, 32, 32, 9, 119, 104, 101, 114, 101, 32, 32, 68, 105, 115, 99, 104, 68, 105, 115, 112, 32, 105, 110, 32, 34, 68, 105, 115, 99, 104, 97, 114, 103, 101, 32, 84, 111, 32, 65, 99, 117, 116, 101, 32, 67, 97, 114, 101, 32, 70, 97, 99, 105, 108, 105, 116, 121, 34, 10, 9, 9, 111, 114, 32, 68, 105, 115, 99, 104, 68, 105, 115, 112, 32, 105, 110, 32, 34, 76, 101, 102, 116, 32, 65, 103, 97, 105, 110, 115, 116, 32, 77, 101, 100, 105, 99, 97, 108, 32, 65, 100, 118, 105, 99, 101, 34, 10, 9, 9, 111, 114, 32, 68, 105, 115, 99, 104, 68, 105, 115, 112, 32, 105, 110, 32, 34, 80, 97, 116, 105, 101, 110, 116, 32, 69, 120, 112, 105, 114, 101, 100, 34, 10, 9, 9, 111, 114, 32, 68, 105, 115, 99, 104, 68, 105, 115, 112, 32, 105, 110, 32, 34, 68, 105, 115, 99, 104, 97, 114, 103, 101, 100, 32, 116, 111, 32, 72, 111, 109, 101, 32, 102, 111, 114, 32, 72, 111, 115, 112, 105, 99, 101, 32, 67, 97, 114, 101, 34, 10, 9, 9, 111, 114, 32, 68, 105, 115, 99, 104, 68, 105, 115, 112, 32, 105, 110, 32, 34, 68, 105, 115, 99, 104, 97, 114, 103, 101, 100, 32, 116, 111, 32, 72, 101, 97, 108, 116, 104, 32, 67, 97, 114, 101, 32, 70, 97, 99, 105, 108, 105, 116, 121, 32, 102, 111, 114, 32, 72, 111, 115, 112, 105, 99, 101, 32, 67, 97, 114, 101, 34, 9, 9, 9, 10, 10, 100, 101, 102, 105, 110, 101, 32, 34, 69, 110, 99, 111, 117, 110, 116, 101, 114, 32, 119, 105, 116, 104, 32, 80, 114, 105, 110, 99, 105, 112, 97, 108, 32, 68, 105, 97, 103, 110, 111, 115, 105, 115, 32, 97, 110, 100, 32, 65, 103, 101, 34, 58, 10, 32, 32, 34, 65, 108, 108, 32, 83, 116, 114, 111, 107, 101, 32, 69, 110, 99, 111, 117, 110, 116, 101, 114, 34, 32, 65, 108, 108, 83, 116, 114, 111, 107, 101, 69, 110, 99, 111, 117, 110, 116, 101, 114, 10, 32, 32, 32, 32, 119, 104, 101, 114, 101, 32, 65, 103, 101, 73, 110, 89, 101, 97, 114, 115, 65, 116, 40, 100, 97, 116, 101, 32, 102, 114, 111, 109, 32, 115, 116, 97, 114, 116, 32, 111, 102, 32, 65, 108, 108, 83, 116, 114, 111, 107, 101, 69, 110, 99, 111, 117, 110, 116, 101, 114, 46, 112, 101, 114, 105, 111, 100, 32, 41, 32, 62, 61, 32, 49, 56, 10, 10, 100, 101, 102, 105, 110, 101, 32, 34, 67, 111, 109, 102, 111, 114, 116, 32, 77, 101, 97, 115, 117, 114, 101, 115, 32, 100, 117, 114, 105, 110, 103, 32, 72, 111, 115, 112, 105, 116, 97, 108, 105, 122, 97, 116, 105, 111, 110, 34, 58, 10, 32, 32, 34, 73, 115, 99, 104, 101, 109, 105, 99, 32, 83, 116, 114, 111, 107, 101, 32, 69, 110, 99, 111, 117, 110, 116, 101, 114, 34, 32, 73, 115, 99, 104, 101, 109, 105, 99, 83, 116, 114, 111, 107, 101, 69, 110, 99, 111, 117, 110, 116, 101, 114, 10, 32, 32, 32, 32, 119, 105, 116, 104, 32, 34, 73, 110, 116, 101, 114, 118, 101, 110, 116, 105, 111, 110, 32, 67, 111, 109, 102, 111, 114, 116, 32, 77, 101, 97, 115, 117, 114, 101, 115, 34, 32, 67, 111, 109, 102, 111, 114, 116, 77, 101, 97, 115, 117, 114, 101, 10, 32, 32, 32, 32, 32, 115, 117, 99, 104, 32, 116, 104, 97, 116, 32, 67, 111, 97, 108, 101, 115, 99, 101, 40, 115, 116, 97, 114, 116, 32, 111, 102, 32, 67, 111, 109, 102, 111, 114, 116, 77, 101, 97, 115, 117, 114, 101, 46, 112, 101, 114, 102, 111, 114, 109, 101, 100, 46, 116, 111, 73, 110, 116, 101, 114, 118, 97, 108, 40, 41, 44, 32, 67, 111, 109, 102, 111, 114, 116, 77, 101, 97, 115, 117, 114, 101, 46, 97, 117, 116, 104, 111, 114, 101, 100, 79, 110, 41, 32, 100, 117, 114, 105, 110, 103, 32, 73, 115, 99, 104, 101, 109, 105, 99, 83, 116, 114, 111, 107, 101, 69, 110, 99, 111, 117, 110, 116, 101, 114, 46, 104, 111, 115, 112, 105, 116, 97, 108, 105, 122, 97, 116, 105, 111, 110, 87, 105, 116, 104, 79, 98, 115, 101, 114, 118, 97, 116, 105, 111, 110, 40, 41, 10, 10, 100, 101, 102, 105, 110, 101, 32, 34, 69, 110, 99, 111, 117, 110, 116, 101, 114, 32, 119, 105, 116, 104, 32, 67, 111, 109, 102, 111, 114, 116, 32, 77, 101, 97, 115, 117, 114, 101, 115, 32, 100, 117, 114, 105, 110, 103, 32, 72, 111, 115, 112, 105, 116, 97, 108, 105, 122, 97, 116, 105, 111, 110, 34, 58, 10, 32, 32, 34, 73, 115, 99, 104, 101, 109, 105, 99, 32, 83, 116, 114, 111, 107, 101, 32, 69, 110, 99, 111, 117, 110, 116, 101, 114, 34, 32, 73, 115, 99, 104, 101, 109, 105, 99, 83, 116, 114, 111, 107, 101, 69, 110, 99, 111, 117, 110, 116, 101, 114, 10, 32, 32, 32, 32, 119, 105, 116, 104, 32, 34, 73, 110, 116, 101, 114, 118, 101, 110, 116, 105, 111, 110, 32, 67, 111, 109, 102, 111, 114, 116, 32, 77, 101, 97, 115, 117, 114, 101, 115, 34, 32, 67, 111, 109, 102, 111, 114, 116, 77, 101, 97, 115, 117, 114, 101, 10, 32, 32, 32, 32, 32, 115, 117, 99, 104, 32, 116, 104, 97, 116, 32, 67, 111, 97, 108, 101, 115, 99, 101, 40, 115, 116, 97, 114, 116, 32, 111, 102, 32, 67, 111, 109, 102, 111, 114, 116, 77, 101, 97, 115, 117, 114, 101, 46, 112, 101, 114, 102, 111, 114, 109, 101, 100, 46, 116, 111, 73, 110, 116, 101, 114, 118, 97, 108, 40, 41, 44, 32, 67, 111, 109, 102, 111, 114, 116, 77, 101, 97, 115, 117, 114, 101, 46, 97, 117, 116, 104, 111, 114, 101, 100, 79, 110, 41, 32, 100, 117, 114, 105, 110, 103, 32, 73, 115, 99, 104, 101, 109, 105, 99, 83, 116, 114, 111, 107, 101, 69, 110, 99, 111, 117, 110, 116, 101, 114, 46, 104, 111, 115, 112, 105, 116, 97, 108, 105, 122, 97, 116, 105, 111, 110, 87, 105, 116, 104, 79, 98, 115, 101, 114, 118, 97, 116, 105, 111, 110, 40, 41, 10, 10, 100, 101, 102, 105, 110, 101, 32, 34, 73, 110, 116, 101, 114, 118, 101, 110, 116, 105, 111, 110, 32, 67, 111, 109, 102, 111, 114, 116, 32, 77, 101, 97, 115, 117, 114, 101, 115, 34, 58, 10, 32, 32, 40, 32, 91, 34, 83, 101, 114, 118, 105, 99, 101, 82, 101, 113, 117, 101, 115, 116, 34, 58, 32, 99, 111, 100, 101, 32, 105, 110, 32, 34, 67, 111, 109, 102, 111, 114, 116, 32, 77, 101, 97, 115, 117, 114, 101, 115, 34, 93, 32, 83, 82, 10, 32, 32, 32, 32, 119, 104, 101, 114, 101, 32, 83, 82, 46, 115, 116, 97, 116, 117, 115, 32, 105, 110, 32, 123, 32, 39, 97, 99, 116, 105, 118, 101, 39, 44, 32, 39, 99, 111, 109, 112, 108, 101, 116, 101, 100, 39, 44, 32, 39, 111, 110, 45, 104, 111, 108, 100, 39, 32, 125, 10, 32, 32, 32, 32, 32, 32, 97, 110, 100, 32, 83, 82, 46, 105, 110, 116, 101, 110, 116, 32, 105, 110, 32, 123, 32, 39, 111, 114, 100, 101, 114, 39, 44, 32, 39, 111, 114, 105, 103, 105, 110, 97, 108, 45, 111, 114, 100, 101, 114, 39, 44, 32, 39, 114, 101, 102, 108, 101, 120, 45, 111, 114, 100, 101, 114, 39, 44, 32, 39, 102, 105, 108, 108, 101, 114, 45, 111, 114, 100, 101, 114, 39, 44, 32, 39, 105, 110, 115, 116, 97, 110, 99, 101, 45, 111, 114, 100, 101, 114, 39, 32, 125, 10, 32, 32, 32, 32, 32, 32, 97, 110, 100, 32, 83, 82, 46, 100, 111, 78, 111, 116, 80, 101, 114, 102, 111, 114, 109, 32, 105, 115, 32, 110, 111, 116, 32, 116, 114, 117, 101, 10, 32, 32, 41, 32, 32, 10, 32, 32, 117, 110, 105, 111, 110, 32, 40, 32, 91, 34, 80, 114, 111, 99, 101, 100, 117, 114, 101, 34, 58, 32, 34, 67, 111, 109, 102, 111, 114, 116, 32, 77, 101, 97, 115, 117, 114, 101, 115, 34, 93, 32, 73, 110, 116, 101, 114, 118, 101, 110, 116, 105, 111, 110, 80, 101, 114, 102, 111, 114, 109, 101, 100, 10, 32, 32, 32, 32, 32, 32, 32, 32, 119, 104, 101, 114, 101, 32, 73, 110, 116, 101, 114, 118, 101, 110, 116, 105, 111, 110, 80, 101, 114, 102, 111, 114, 109, 101, 100, 46, 115, 116, 97, 116, 117, 115, 32, 105, 110, 32, 123, 32, 39, 99, 111, 109, 112, 108, 101, 116, 101, 100, 39, 44, 32, 39, 105, 110, 45, 112, 114, 111, 103, 114, 101, 115, 115, 39, 32, 125, 10, 32, 32, 41, 10, 32, 32, 10, 100, 101, 102, 105, 110, 101, 32, 102, 108, 117, 101, 110, 116, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 67, 97, 108, 101, 110, 100, 97, 114, 68, 97, 121, 79, 102, 79, 114, 68, 97, 121, 65, 102, 116, 101, 114, 40, 83, 116, 97, 114, 116, 86, 97, 108, 117, 101, 32, 68, 97, 116, 101, 84, 105, 109, 101, 41, 58, 10, 32, 32, 73, 110, 116, 101, 114, 118, 97, 108, 32, 91, 100, 97, 116, 101, 32, 102, 114, 111, 109, 32, 40, 83, 116, 97, 114, 116, 86, 97, 108, 117, 101, 41, 44, 32, 100, 97, 116, 101, 32, 102, 114, 111, 109, 32, 40, 83, 116, 97, 114, 116, 86, 97, 108, 117, 101, 41, 32, 43, 32, 49, 32, 100, 97, 121, 93]</code></pre></td></tr>\n                        </table>\n                    </td>\n                </tr>\n            \n            \n        \n    </table>\n</div>"
  },
  "contained": [ {
    "resourceType": "Parameters",
    "id": "options",
    "parameter": [ {
      "name": "translatorVersion",
      "valueString": "3.5.1"
    }, {
      "name": "option",
      "valueString": "EnableAnnotations"
    }, {
      "name": "option",
      "valueString": "EnableLocators"
    }, {
      "name": "option",
      "valueString": "DisableListDemotion"
    }, {
      "name": "option",
      "valueString": "DisableListPromotion"
    }, {
      "name": "format",
      "valueString": "JSON"
    }, {
      "name": "format",
      "valueString": "XML"
    }, {
      "name": "analyzeDataRequirements",
      "valueBoolean": true
    }, {
      "name": "collapseDataRequirements",
      "valueBoolean": true
    }, {
      "name": "compatibilityLevel",
      "valueString": "1.5"
    }, {
      "name": "enableCqlOnly",
      "valueBoolean": false
    }, {
      "name": "errorLevel",
      "valueString": "Info"
    }, {
      "name": "signatureLevel",
      "valueString": "None"
    }, {
      "name": "validateUnits",
      "valueBoolean": true
    }, {
      "name": "verifyOnly",
      "valueBoolean": false
    } ]
  } ],
  "extension": [ {
    "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlOptions",
    "valueReference": {
      "reference": "#options"
    }
  }, {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "https://madie.cms.gov/Library/TJCOverall",
  "identifier": [ {
    "use": "official",
    "system": "https://madie.cms.gov/login",
    "value": "653fefc50da4c65b6be7e5d3"
  } ],
  "version": "8.11.000",
  "name": "TJCOverall",
  "title": "TJCOverall",
  "status": "active",
  "experimental": false,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "date": "2023-11-22T18:42:45+00:00",
  "publisher": "The Joint Commission",
  "description": "Common functions and definitions used by TJC measures",
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "QICore model information",
    "resource": "http://hl7.org/fhir/Library/QICore-ModelInfo"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://ecqi.healthit.gov/ecqms/Library/FHIRHelpers|4.3.000"
  }, {
    "type": "depends-on",
    "display": "Library CQMCommon",
    "resource": "http://ecqi.healthit.gov/ecqms/Library/CQMCommon|2.0.000"
  }, {
    "type": "depends-on",
    "display": "Library QICoreCommon",
    "resource": "http://ecqi.healthit.gov/ecqms/Library/QICoreCommon|2.0.000"
  }, {
    "type": "depends-on",
    "display": "Value set Comfort Measures",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/1.3.6.1.4.1.33895.1.3.0.45"
  }, {
    "type": "depends-on",
    "display": "Value set Discharge To Acute Care Facility",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.87"
  }, {
    "type": "depends-on",
    "display": "Value set Discharged to Health Care Facility for Hospice Care",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.207"
  }, {
    "type": "depends-on",
    "display": "Value set Discharged to Home for Hospice Care",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.209"
  }, {
    "type": "depends-on",
    "display": "Value set Hemorrhagic Stroke",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.212"
  }, {
    "type": "depends-on",
    "display": "Value set Ischemic Stroke",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.247"
  }, {
    "type": "depends-on",
    "display": "Value set Left Against Medical Advice",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.308"
  }, {
    "type": "depends-on",
    "display": "Value set Nonelective Inpatient Encounter",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.424"
  }, {
    "type": "depends-on",
    "display": "Value set Patient Expired",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.309"
  }, {
    "type": "depends-on",
    "display": "Value set Observation Services",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1111.143"
  }, {
    "type": "depends-on",
    "display": "Value set Emergency Department Visit",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.292"
  } ],
  "parameter": [ {
    "name": "Measurement Period",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "Period"
  }, {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "Non Elective Inpatient Encounter",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "name": "All Stroke Encounter",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "name": "Encounter with Principal Diagnosis and Age",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "name": "Ischemic Stroke Encounter",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "name": "Ischemic Stroke Encounters with Discharge Disposition",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "name": "Intervention Comfort Measures",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "name": "Comfort Measures during Hospitalization",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "name": "Encounter with Comfort Measures during Hospitalization",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-patient" ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter" ],
    "mustSupport": [ "type", "period", "rank", "rank.value", "condition", "condition.reference", "condition.reference.value", "hospitalization", "hospitalization.dischargeDisposition" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.424"
    } ],
    "dateFilter": [ {
      "path": "period",
      "valuePeriod": {
        "extension": [ {
          "url": "http://hl7.org/fhir/StructureDefinition/cqf-expression",
          "valueExpression": {
            "language": "text/cql-identifier",
            "expression": "Measurement Period"
          }
        } ]
      }
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter" ],
    "mustSupport": [ "type", "status", "status.value", "period", "rank", "rank.value", "condition", "condition.reference", "condition.reference.value", "hospitalization", "hospitalization.dischargeDisposition" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1111.143"
    }, {
      "path": "status.value",
      "code": [ {
        "code": "finished"
      } ]
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter" ],
    "mustSupport": [ "type", "status", "status.value", "period", "rank", "rank.value", "condition", "condition.reference", "condition.reference.value", "hospitalization", "hospitalization.dischargeDisposition" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.292"
    }, {
      "path": "status.value",
      "code": [ {
        "code": "finished"
      } ]
    } ],
    "dateFilter": [ {
      "path": "period",
      "valuePeriod": {
        "extension": [ {
          "url": "http://hl7.org/fhir/uv/crmi-analysisException",
          "valueString": "Error attempting to determine filter value: toFhirValue not implemented for Subtract"
        } ]
      }
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-condition" ],
    "mustSupport": [ "id", "id.value" ]
  }, {
    "type": "ServiceRequest",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-servicerequest" ],
    "mustSupport": [ "code", "status", "status.value", "intent", "intent.value", "doNotPerform", "doNotPerform.value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/1.3.6.1.4.1.33895.1.3.0.45"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-procedure" ],
    "mustSupport": [ "code", "status", "status.value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/1.3.6.1.4.1.33895.1.3.0.45"
    } ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "bGlicmFyeSBUSkNPdmVyYWxsIHZlcnNpb24gJzguMTEuMDAwJwoKCnVzaW5nIFFJQ29yZSB2ZXJzaW9uICc0LjEuMScKCmluY2x1ZGUgRkhJUkhlbHBlcnMgdmVyc2lvbiAnNC4zLjAwMCcgY2FsbGVkIEZISVJIZWxwZXJzCmluY2x1ZGUgQ1FNQ29tbW9uICAgdmVyc2lvbiAnMi4wLjAwMCcgY2FsbGVkIENRTUNvbW1vbgppbmNsdWRlIFFJQ29yZUNvbW1vbiB2ZXJzaW9uICcyLjAuMDAwJyBjYWxsZWQgUUlDb3JlQ29tbW9uCgp2YWx1ZXNldCAiQ29tZm9ydCBNZWFzdXJlcyI6ICdodHRwOi8vY3RzLm5sbS5uaWguZ292L2ZoaXIvVmFsdWVTZXQvMS4zLjYuMS40LjEuMzM4OTUuMS4zLjAuNDUnCnZhbHVlc2V0ICJEaXNjaGFyZ2UgVG8gQWN1dGUgQ2FyZSBGYWNpbGl0eSI6ICdodHRwOi8vY3RzLm5sbS5uaWguZ292L2ZoaXIvVmFsdWVTZXQvMi4xNi44NDAuMS4xMTM4ODMuMy4xMTcuMS43LjEuODcnCnZhbHVlc2V0ICJEaXNjaGFyZ2VkIHRvIEhlYWx0aCBDYXJlIEZhY2lsaXR5IGZvciBIb3NwaWNlIENhcmUiOiAnaHR0cDovL2N0cy5ubG0ubmloLmdvdi9maGlyL1ZhbHVlU2V0LzIuMTYuODQwLjEuMTEzODgzLjMuMTE3LjEuNy4xLjIwNycKdmFsdWVzZXQgIkRpc2NoYXJnZWQgdG8gSG9tZSBmb3IgSG9zcGljZSBDYXJlIjogJ2h0dHA6Ly9jdHMubmxtLm5paC5nb3YvZmhpci9WYWx1ZVNldC8yLjE2Ljg0MC4xLjExMzg4My4zLjExNy4xLjcuMS4yMDknCnZhbHVlc2V0ICJIZW1vcnJoYWdpYyBTdHJva2UiOiAnaHR0cDovL2N0cy5ubG0ubmloLmdvdi9maGlyL1ZhbHVlU2V0LzIuMTYuODQwLjEuMTEzODgzLjMuMTE3LjEuNy4xLjIxMicKdmFsdWVzZXQgIklzY2hlbWljIFN0cm9rZSI6ICdodHRwOi8vY3RzLm5sbS5uaWguZ292L2ZoaXIvVmFsdWVTZXQvMi4xNi44NDAuMS4xMTM4ODMuMy4xMTcuMS43LjEuMjQ3Jwp2YWx1ZXNldCAiTGVmdCBBZ2FpbnN0IE1lZGljYWwgQWR2aWNlIjogJ2h0dHA6Ly9jdHMubmxtLm5paC5nb3YvZmhpci9WYWx1ZVNldC8yLjE2Ljg0MC4xLjExMzg4My4zLjExNy4xLjcuMS4zMDgnCnZhbHVlc2V0ICJOb25lbGVjdGl2ZSBJbnBhdGllbnQgRW5jb3VudGVyIjogJ2h0dHA6Ly9jdHMubmxtLm5paC5nb3YvZmhpci9WYWx1ZVNldC8yLjE2Ljg0MC4xLjExMzg4My4zLjExNy4xLjcuMS40MjQnCnZhbHVlc2V0ICJQYXRpZW50IEV4cGlyZWQiOiAnaHR0cDovL2N0cy5ubG0ubmloLmdvdi9maGlyL1ZhbHVlU2V0LzIuMTYuODQwLjEuMTEzODgzLjMuMTE3LjEuNy4xLjMwOScKCnBhcmFtZXRlciAiTWVhc3VyZW1lbnQgUGVyaW9kIiBJbnRlcnZhbDxEYXRlVGltZT4KCmNvbnRleHQgUGF0aWVudAoKCmRlZmluZSAiTm9uIEVsZWN0aXZlIElucGF0aWVudCBFbmNvdW50ZXIiOgogIFsiRW5jb3VudGVyIjogIk5vbmVsZWN0aXZlIElucGF0aWVudCBFbmNvdW50ZXIiXSBOb25FbGVjdGl2ZUVuY291bnRlcgogICAgICAgIHdoZXJlIE5vbkVsZWN0aXZlRW5jb3VudGVyLnBlcmlvZCBlbmRzIGR1cmluZyBkYXkgb2YgIk1lYXN1cmVtZW50IFBlcmlvZCIKCmRlZmluZSAiQWxsIFN0cm9rZSBFbmNvdW50ZXIiOgogICJOb24gRWxlY3RpdmUgSW5wYXRpZW50IEVuY291bnRlciIgTm9uRWxlY3RpdmVFbmNvdW50ZXIKICBsZXQgQ29uZGl0aW9uQ29kZTogTm9uRWxlY3RpdmVFbmNvdW50ZXIucHJpbmNpcGFsRGlhZ25vc2lzKCkuY29kZQogICAgd2hlcmUgKCBDb25kaXRpb25Db2RlIGluICJIZW1vcnJoYWdpYyBTdHJva2UiCiAgICAgICBvciAgIENvbmRpdGlvbkNvZGUgaW4gIklzY2hlbWljIFN0cm9rZSIgKSAgCgpkZWZpbmUgIklzY2hlbWljIFN0cm9rZSBFbmNvdW50ZXIiOgogICJFbmNvdW50ZXIgd2l0aCBQcmluY2lwYWwgRGlhZ25vc2lzIGFuZCBBZ2UiIEVuY291bnRlcldpdGhBZ2UKICAgIHdoZXJlIEVuY291bnRlcldpdGhBZ2UucHJpbmNpcGFsRGlhZ25vc2lzKCkuY29kZSBpbiAiSXNjaGVtaWMgU3Ryb2tlIgoKZGVmaW5lICJJc2NoZW1pYyBTdHJva2UgRW5jb3VudGVycyB3aXRoIERpc2NoYXJnZSBEaXNwb3NpdGlvbiI6CiAgIklzY2hlbWljIFN0cm9rZSBFbmNvdW50ZXIiIElzY2hlbWljU3Ryb2tlRW5jb3VudGVyCiAgbGV0IERpc2NoRGlzcDogSXNjaGVtaWNTdHJva2VFbmNvdW50ZXIuaG9zcGl0YWxpemF0aW9uLmRpc2NoYXJnZURpc3Bvc2l0aW9uCiAgCXdoZXJlICBEaXNjaERpc3AgaW4gIkRpc2NoYXJnZSBUbyBBY3V0ZSBDYXJlIEZhY2lsaXR5IgoJCW9yIERpc2NoRGlzcCBpbiAiTGVmdCBBZ2FpbnN0IE1lZGljYWwgQWR2aWNlIgoJCW9yIERpc2NoRGlzcCBpbiAiUGF0aWVudCBFeHBpcmVkIgoJCW9yIERpc2NoRGlzcCBpbiAiRGlzY2hhcmdlZCB0byBIb21lIGZvciBIb3NwaWNlIENhcmUiCgkJb3IgRGlzY2hEaXNwIGluICJEaXNjaGFyZ2VkIHRvIEhlYWx0aCBDYXJlIEZhY2lsaXR5IGZvciBIb3NwaWNlIENhcmUiCQkJCgpkZWZpbmUgIkVuY291bnRlciB3aXRoIFByaW5jaXBhbCBEaWFnbm9zaXMgYW5kIEFnZSI6CiAgIkFsbCBTdHJva2UgRW5jb3VudGVyIiBBbGxTdHJva2VFbmNvdW50ZXIKICAgIHdoZXJlIEFnZUluWWVhcnNBdChkYXRlIGZyb20gc3RhcnQgb2YgQWxsU3Ryb2tlRW5jb3VudGVyLnBlcmlvZCApID49IDE4CgpkZWZpbmUgIkNvbWZvcnQgTWVhc3VyZXMgZHVyaW5nIEhvc3BpdGFsaXphdGlvbiI6CiAgIklzY2hlbWljIFN0cm9rZSBFbmNvdW50ZXIiIElzY2hlbWljU3Ryb2tlRW5jb3VudGVyCiAgICB3aXRoICJJbnRlcnZlbnRpb24gQ29tZm9ydCBNZWFzdXJlcyIgQ29tZm9ydE1lYXN1cmUKICAgICBzdWNoIHRoYXQgQ29hbGVzY2Uoc3RhcnQgb2YgQ29tZm9ydE1lYXN1cmUucGVyZm9ybWVkLnRvSW50ZXJ2YWwoKSwgQ29tZm9ydE1lYXN1cmUuYXV0aG9yZWRPbikgZHVyaW5nIElzY2hlbWljU3Ryb2tlRW5jb3VudGVyLmhvc3BpdGFsaXphdGlvbldpdGhPYnNlcnZhdGlvbigpCgpkZWZpbmUgIkVuY291bnRlciB3aXRoIENvbWZvcnQgTWVhc3VyZXMgZHVyaW5nIEhvc3BpdGFsaXphdGlvbiI6CiAgIklzY2hlbWljIFN0cm9rZSBFbmNvdW50ZXIiIElzY2hlbWljU3Ryb2tlRW5jb3VudGVyCiAgICB3aXRoICJJbnRlcnZlbnRpb24gQ29tZm9ydCBNZWFzdXJlcyIgQ29tZm9ydE1lYXN1cmUKICAgICBzdWNoIHRoYXQgQ29hbGVzY2Uoc3RhcnQgb2YgQ29tZm9ydE1lYXN1cmUucGVyZm9ybWVkLnRvSW50ZXJ2YWwoKSwgQ29tZm9ydE1lYXN1cmUuYXV0aG9yZWRPbikgZHVyaW5nIElzY2hlbWljU3Ryb2tlRW5jb3VudGVyLmhvc3BpdGFsaXphdGlvbldpdGhPYnNlcnZhdGlvbigpCgpkZWZpbmUgIkludGVydmVudGlvbiBDb21mb3J0IE1lYXN1cmVzIjoKICAoIFsiU2VydmljZVJlcXVlc3QiOiBjb2RlIGluICJDb21mb3J0IE1lYXN1cmVzIl0gU1IKICAgIHdoZXJlIFNSLnN0YXR1cyBpbiB7ICdhY3RpdmUnLCAnY29tcGxldGVkJywgJ29uLWhvbGQnIH0KICAgICAgYW5kIFNSLmludGVudCBpbiB7ICdvcmRlcicsICdvcmlnaW5hbC1vcmRlcicsICdyZWZsZXgtb3JkZXInLCAnZmlsbGVyLW9yZGVyJywgJ2luc3RhbmNlLW9yZGVyJyB9CiAgICAgIGFuZCBTUi5kb05vdFBlcmZvcm0gaXMgbm90IHRydWUKICApICAKICB1bmlvbiAoIFsiUHJvY2VkdXJlIjogIkNvbWZvcnQgTWVhc3VyZXMiXSBJbnRlcnZlbnRpb25QZXJmb3JtZWQKICAgICAgICB3aGVyZSBJbnRlcnZlbnRpb25QZXJmb3JtZWQuc3RhdHVzIGluIHsgJ2NvbXBsZXRlZCcsICdpbi1wcm9ncmVzcycgfQogICkKICAKZGVmaW5lIGZsdWVudCBmdW5jdGlvbiBDYWxlbmRhckRheU9mT3JEYXlBZnRlcihTdGFydFZhbHVlIERhdGVUaW1lKToKICBJbnRlcnZhbCBbZGF0ZSBmcm9tIChTdGFydFZhbHVlKSwgZGF0ZSBmcm9tIChTdGFydFZhbHVlKSArIDEgZGF5XQ=="
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
  } ]
}