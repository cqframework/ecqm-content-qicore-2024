{
  "resourceType": "Library",
  "id": "WeightAssessmentandCounselingforNutritionandPhysicalActivityforChildrenandAdolescentsFHIR",
  "meta": {
    "profile": [ "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/computable-library-cqfm" ]
  },
  "language": "en",
  "text": {
    "status": "extensions",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"> \n         <table class=\"grid dict\"> \n            <tr> \n               <th scope=\"row\"> \n                  <b>Title: </b> \n               </th> \n               <td style=\"padding-left: 4px;\">WeightAssessmentandCounselingforNutritionandPhysicalActivityforChildrenandAdolescentsFHIR</td> \n            </tr> \n            <tr> \n               <th scope=\"row\"> \n                  <b>Id: </b> \n               </th> \n               <td style=\"padding-left: 4px;\">WeightAssessmentandCounselingforNutritionandPhysicalActivityforChildrenandAdolescentsFHIR</td> \n            </tr> \n            <tr> \n               <th scope=\"row\"> \n                  <b>Version: </b> \n               </th> \n               <td style=\"padding-left: 4px;\">0.1.000</td> \n            </tr> \n            <tr> \n               <th scope=\"row\"> \n                  <b>Url: </b> \n               </th> \n               <td style=\"padding-left: 4px;\">https://madie.cms.gov/Library/WeightAssessmentandCounselingforNutritionandPhysicalActivityforChildrenandAdolescentsFHIR</td> \n            </tr> \n            <tr> \n               <th scope=\"row\"> \n                  <b> official </b> \n               </th> \n               <td style=\"padding-left: 4px;\"> \n                  <p style=\"margin-bottom: 5px;\"> \n                     <span>WeightAssessmentandCounselingforNutritionandPhysicalActivityforChildrenandAdolescentsFHIR</span> \n                  </p> \n               </td> \n            </tr> \n            <tr> \n               <th scope=\"row\"> \n                  <b>Name: </b> \n               </th> \n               <td style=\"padding-left: 4px;\">WeightAssessmentandCounselingforNutritionandPhysicalActivityforChildrenandAdolescentsFHIR</td> \n            </tr> \n            <tr> \n               <th scope=\"row\"> \n                  <b>Status: </b> \n               </th> \n               <td style=\"padding-left: 4px;\">active</td> \n            </tr> \n            <tr> \n               <th scope=\"row\"> \n                  <b>Type: </b> \n               </th> \n               <td style=\"padding-left: 4px;\"> \n                  <p style=\"margin-bottom: 5px;\"> \n                     <b>system: </b> \n                     <span>http://terminology.hl7.org/CodeSystem/library-type</span> \n                  </p> \n                  <p style=\"margin-bottom: 5px;\"> \n                     <b>code: </b> \n                     <span>logic-library</span> \n                  </p> \n               </td> \n            </tr> \n            <tr> \n               <th scope=\"row\"> \n                  <b>Date: </b> \n               </th> \n               <td style=\"padding-left: 4px;\">2023-11-29T03:16:05+00:00</td> \n            </tr> \n            <tr> \n               <th scope=\"row\"> \n                  <b>Description: </b> \n               </th> \n               <td style=\"padding-left: 4px;\">WeightAssessmentandCounselingforNutritionandPhysicalActivityforChildrenandAdolescentsFHIR</td> \n            </tr> \n            <tr> \n               <th scope=\"row\"> \n                  <b>Related Artifacts: </b> \n               </th> \n               <td style=\"padding-left: 4px;\"> \n                  <p> \n                     <b>Dependencies</b> \n                  </p> \n                  <ul> \n                     <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1108.15</li> \n                     <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.207</li> \n                     <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.209</li> \n                     <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1001</li> \n                     <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1016</li> \n                     <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1022</li> \n                     <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1024</li> \n                     <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1026</li> \n                     <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1027</li> \n                     <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1080</li> \n                     <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.118.12.1035</li> \n                     <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.121.12.1012</li> \n                     <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.121.12.1014</li> \n                     <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.121.12.1015</li> \n                     <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.195.12.1003</li> \n                     <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.378</li> \n                     <li>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.666.5.307</li> \n                     <li>http://loinc.org</li> \n                     <li>http://terminology.hl7.org/CodeSystem/observation-category</li> \n                     <li>http://unitsofmeasure.org</li> \n                     <li>https://madie.cms.gov/Library/FHIRHelpers|4.3.000</li> \n                     <li>https://madie.cms.gov/Library/Hospice|6.9.000</li> \n                     <li>https://madie.cms.gov/Library/QICoreCommon|2.0.000</li> \n                     <li>https://madie.cms.gov/Library/Status|1.6.000</li> \n                     <li>https://madie.cms.gov/Library/SupplementalDataElements|3.4.000</li> \n                  </ul> \n               </td> \n            </tr> \n            <tr> \n               <th scope=\"row\"> \n                  <b>Data Requirements:</b> \n               </th> \n               <td style=\"padding-left: 4px;\"> \n                  <table class=\"grid-dict\"> \n                     <tr> \n                        <th> \n                           <b>Type</b> \n                        </th> \n                        <th> \n                           <b>Profile</b> \n                        </th> \n                        <th> \n                           <b>MS</b> \n                        </th> \n                        <th> \n                           <b>Code Filter</b> \n                        </th> \n                     </tr> \n                     <tr> \n                        <th>Patient</th> \n                        <th>http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-patient</th> \n                        <th>;;</th> \n                        <th> </th> \n                     </tr> \n                     <tr> \n                        <th>Procedure</th> \n                        <th>http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-procedure</th> \n                        <th>;;;;</th> \n                        <th> \n                           <b>code filter: </b> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>path: </b> \n                              <span>code</span> \n                           </span> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>value set: </b> \n                              <span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.118.12.1035</span> \n                           </span> \n                        </th> \n                     </tr> \n                     <tr> \n                        <th>Procedure</th> \n                        <th>http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-procedure</th> \n                        <th>;;;;</th> \n                        <th> \n                           <b>code filter: </b> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>path: </b> \n                              <span>code</span> \n                           </span> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>value set: </b> \n                              <span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.195.12.1003</span> \n                           </span> \n                        </th> \n                     </tr> \n                     <tr> \n                        <th>Procedure</th> \n                        <th>http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-procedure</th> \n                        <th>;;;;</th> \n                        <th> \n                           <b>code filter: </b> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>path: </b> \n                              <span>code</span> \n                           </span> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>value set: </b> \n                              <span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1584</span> \n                           </span> \n                        </th> \n                     </tr> \n                     <tr> \n                        <th>Encounter</th> \n                        <th>http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter</th> \n                        <th>;;;;</th> \n                        <th> \n                           <b>code filter: </b> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>path: </b> \n                              <span>type</span> \n                           </span> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>value set: </b> \n                              <span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1001</span> \n                           </span> \n                        </th> \n                     </tr> \n                     <tr> \n                        <th>Encounter</th> \n                        <th>http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter</th> \n                        <th>;;;;</th> \n                        <th> \n                           <b>code filter: </b> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>path: </b> \n                              <span>type</span> \n                           </span> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>value set: </b> \n                              <span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1026</span> \n                           </span> \n                        </th> \n                     </tr> \n                     <tr> \n                        <th>Encounter</th> \n                        <th>http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter</th> \n                        <th>;;;;</th> \n                        <th> \n                           <b>code filter: </b> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>path: </b> \n                              <span>type</span> \n                           </span> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>value set: </b> \n                              <span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1022</span> \n                           </span> \n                        </th> \n                     </tr> \n                     <tr> \n                        <th>Encounter</th> \n                        <th>http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter</th> \n                        <th>;;;;</th> \n                        <th> \n                           <b>code filter: </b> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>path: </b> \n                              <span>type</span> \n                           </span> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>value set: </b> \n                              <span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1024</span> \n                           </span> \n                        </th> \n                     </tr> \n                     <tr> \n                        <th>Encounter</th> \n                        <th>http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter</th> \n                        <th>;;;;</th> \n                        <th> \n                           <b>code filter: </b> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>path: </b> \n                              <span>type</span> \n                           </span> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>value set: </b> \n                              <span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1027</span> \n                           </span> \n                        </th> \n                     </tr> \n                     <tr> \n                        <th>Encounter</th> \n                        <th>http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter</th> \n                        <th>;;;;</th> \n                        <th> \n                           <b>code filter: </b> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>path: </b> \n                              <span>type</span> \n                           </span> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>value set: </b> \n                              <span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1016</span> \n                           </span> \n                        </th> \n                     </tr> \n                     <tr> \n                        <th>Encounter</th> \n                        <th>http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter</th> \n                        <th>;;;;</th> \n                        <th> \n                           <b>code filter: </b> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>path: </b> \n                              <span>type</span> \n                           </span> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>value set: </b> \n                              <span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1080</span> \n                           </span> \n                        </th> \n                     </tr> \n                     <tr> \n                        <th>Encounter</th> \n                        <th>http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter</th> \n                        <th>;;;;;;</th> \n                        <th> \n                           <b>code filter: </b> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>path: </b> \n                              <span>type</span> \n                           </span> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>value set: </b> \n                              <span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.666.5.307</span> \n                           </span> \n                        </th> \n                     </tr> \n                     <tr> \n                        <th>Encounter</th> \n                        <th>http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter</th> \n                        <th>;;;;</th> \n                        <th> \n                           <b>code filter: </b> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>path: </b> \n                              <span>type</span> \n                           </span> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>value set: </b> \n                              <span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.1003</span> \n                           </span> \n                        </th> \n                     </tr> \n                     <tr> \n                        <th>Observation</th> \n                        <th>http://hl7.org/fhir/StructureDefinition/bmi</th> \n                        <th>;;;;</th> \n                        <th> </th> \n                     </tr> \n                     <tr> \n                        <th>Observation</th> \n                        <th>http://hl7.org/fhir/StructureDefinition/bodyheight</th> \n                        <th>;;;;</th> \n                        <th> </th> \n                     </tr> \n                     <tr> \n                        <th>Observation</th> \n                        <th>http://hl7.org/fhir/StructureDefinition/bodyweight</th> \n                        <th>;;;;</th> \n                        <th> </th> \n                     </tr> \n                     <tr> \n                        <th>Observation</th> \n                        <th>http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-observation</th> \n                        <th>;;;;;;</th> \n                        <th> \n                           <b>code filter: </b> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>path: </b> \n                              <span>code</span> \n                           </span> \n                           <br/> \n                           <p style=\"margin-bottom: 5px;\"> \n                              <b>system: </b> \n                              <span>http://loinc.org</span> \n                           </p> \n                           <p style=\"margin-bottom: 5px;\"> \n                              <b>code: </b> \n                              <span>45755-6</span> \n                           </p> \n                           <p style=\"margin-bottom: 5px;\"> \n                              <b>display: </b> \n                              <span>Hospice care [Minimum Data Set]</span> \n                           </p> \n                        </th> \n                     </tr> \n                     <tr> \n                        <th>ServiceRequest</th> \n                        <th>http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-servicerequest</th> \n                        <th>;;;;;;;</th> \n                        <th> \n                           <b>code filter: </b> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>path: </b> \n                              <span>code</span> \n                           </span> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>value set: </b> \n                              <span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1584</span> \n                           </span> \n                        </th> \n                     </tr> \n                     <tr> \n                        <th>Condition</th> \n                        <th>http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-condition</th> \n                        <th>;;</th> \n                        <th> \n                           <b>code filter: </b> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>path: </b> \n                              <span>code</span> \n                           </span> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>value set: </b> \n                              <span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.1165</span> \n                           </span> \n                        </th> \n                     </tr> \n                     <tr> \n                        <th>Condition</th> \n                        <th>http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-condition</th> \n                        <th>;;</th> \n                        <th> \n                           <b>code filter: </b> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>path: </b> \n                              <span>code</span> \n                           </span> \n                           <br/> \n                           <span style=\"padding-left: 4px;\"> \n                              <b>value set: </b> \n                              <span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.378</span> \n                           </span> \n                        </th> \n                     </tr> \n                  </table> \n               </td> \n            </tr> \n            <tr> \n               <td colspan=\"2\"> \n                  <table> \n                     <tr> \n                        <th> \n                           <a id=\"cql-content\"> \n                              <b>Content: </b> \n                           </a> text/cql \n                        </th> \n                     </tr> \n                     <tr> \n                        <td> \n                           <pre><code class=\"language-cql\">[108, 105, 98, 114, 97, 114, 121, 32, 87, 101, 105, 103, 104, 116, 65, 115, 115, 101, 115, 115, 109, 101, 110, 116, 97, 110, 100, 67, 111, 117, 110, 115, 101, 108, 105, 110, 103, 102, 111, 114, 78, 117, 116, 114, 105, 116, 105, 111, 110, 97, 110, 100, 80, 104, 121, 115, 105, 99, 97, 108, 65, 99, 116, 105, 118, 105, 116, 121, 102, 111, 114, 67, 104, 105, 108, 100, 114, 101, 110, 97, 110, 100, 65, 100, 111, 108, 101, 115, 99, 101, 110, 116, 115, 70, 72, 73, 82, 32, 118, 101, 114, 115, 105, 111, 110, 32, 39, 48, 46, 49, 46, 48, 48, 48, 39, 13, 10, 13, 10, 117, 115, 105, 110, 103, 32, 81, 73, 67, 111, 114, 101, 32, 118, 101, 114, 115, 105, 111, 110, 32, 39, 52, 46, 49, 46, 49, 39, 13, 10, 13, 10, 105, 110, 99, 108, 117, 100, 101, 32, 70, 72, 73, 82, 72, 101, 108, 112, 101, 114, 115, 32, 118, 101, 114, 115, 105, 111, 110, 32, 39, 52, 46, 51, 46, 48, 48, 48, 39, 32, 99, 97, 108, 108, 101, 100, 32, 70, 72, 73, 82, 72, 101, 108, 112, 101, 114, 115, 13, 10, 105, 110, 99, 108, 117, 100, 101, 32, 81, 73, 67, 111, 114, 101, 67, 111, 109, 109, 111, 110, 32, 118, 101, 114, 115, 105, 111, 110, 32, 39, 50, 46, 48, 46, 48, 48, 48, 39, 32, 99, 97, 108, 108, 101, 100, 32, 81, 73, 67, 111, 114, 101, 67, 111, 109, 109, 111, 110, 13, 10, 105, 110, 99, 108, 117, 100, 101, 32, 83, 117, 112, 112, 108, 101, 109, 101, 110, 116, 97, 108, 68, 97, 116, 97, 69, 108, 101, 109, 101, 110, 116, 115, 32, 118, 101, 114, 115, 105, 111, 110, 32, 39, 51, 46, 52, 46, 48, 48, 48, 39, 32, 99, 97, 108, 108, 101, 100, 32, 83, 68, 69, 13, 10, 105, 110, 99, 108, 117, 100, 101, 32, 72, 111, 115, 112, 105, 99, 101, 32, 118, 101, 114, 115, 105, 111, 110, 32, 39, 54, 46, 57, 46, 48, 48, 48, 39, 32, 99, 97, 108, 108, 101, 100, 32, 72, 111, 115, 112, 105, 99, 101, 13, 10, 105, 110, 99, 108, 117, 100, 101, 32, 83, 116, 97, 116, 117, 115, 32, 118, 101, 114, 115, 105, 111, 110, 32, 39, 49, 46, 54, 46, 48, 48, 48, 39, 32, 99, 97, 108, 108, 101, 100, 32, 83, 116, 97, 116, 117, 115, 13, 10, 13, 10, 99, 111, 100, 101, 115, 121, 115, 116, 101, 109, 32, 34, 85, 67, 85, 77, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 117, 110, 105, 116, 115, 111, 102, 109, 101, 97, 115, 117, 114, 101, 46, 111, 114, 103, 39, 13, 10, 99, 111, 100, 101, 115, 121, 115, 116, 101, 109, 32, 34, 76, 79, 73, 78, 67, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 108, 111, 105, 110, 99, 46, 111, 114, 103, 39, 13, 10, 99, 111, 100, 101, 115, 121, 115, 116, 101, 109, 32, 34, 79, 98, 115, 101, 114, 118, 97, 116, 105, 111, 110, 67, 97, 116, 101, 103, 111, 114, 121, 67, 111, 100, 101, 115, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 116, 101, 114, 109, 105, 110, 111, 108, 111, 103, 121, 46, 104, 108, 55, 46, 111, 114, 103, 47, 67, 111, 100, 101, 83, 121, 115, 116, 101, 109, 47, 111, 98, 115, 101, 114, 118, 97, 116, 105, 111, 110, 45, 99, 97, 116, 101, 103, 111, 114, 121, 39, 13, 10, 13, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 66, 77, 73, 32, 112, 101, 114, 99, 101, 110, 116, 105, 108, 101, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 52, 54, 52, 46, 49, 48, 48, 51, 46, 49, 50, 49, 46, 49, 50, 46, 49, 48, 49, 50, 39, 13, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 67, 111, 117, 110, 115, 101, 108, 105, 110, 103, 32, 102, 111, 114, 32, 78, 117, 116, 114, 105, 116, 105, 111, 110, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 52, 54, 52, 46, 49, 48, 48, 51, 46, 49, 57, 53, 46, 49, 50, 46, 49, 48, 48, 51, 39, 13, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 67, 111, 117, 110, 115, 101, 108, 105, 110, 103, 32, 102, 111, 114, 32, 80, 104, 121, 115, 105, 99, 97, 108, 32, 65, 99, 116, 105, 118, 105, 116, 121, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 52, 54, 52, 46, 49, 48, 48, 51, 46, 49, 49, 56, 46, 49, 50, 46, 49, 48, 51, 53, 39, 13, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 68, 105, 115, 99, 104, 97, 114, 103, 101, 100, 32, 116, 111, 32, 72, 101, 97, 108, 116, 104, 32, 67, 97, 114, 101, 32, 70, 97, 99, 105, 108, 105, 116, 121, 32, 102, 111, 114, 32, 72, 111, 115, 112, 105, 99, 101, 32, 67, 97, 114, 101, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 49, 49, 55, 46, 49, 46, 55, 46, 49, 46, 50, 48, 55, 39, 13, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 68, 105, 115, 99, 104, 97, 114, 103, 101, 100, 32, 116, 111, 32, 72, 111, 109, 101, 32, 102, 111, 114, 32, 72, 111, 115, 112, 105, 99, 101, 32, 67, 97, 114, 101, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 49, 49, 55, 46, 49, 46, 55, 46, 49, 46, 50, 48, 57, 39, 13, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 69, 110, 99, 111, 117, 110, 116, 101, 114, 32, 73, 110, 112, 97, 116, 105, 101, 110, 116, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 54, 54, 54, 46, 53, 46, 51, 48, 55, 39, 13, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 72, 101, 105, 103, 104, 116, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 52, 54, 52, 46, 49, 48, 48, 51, 46, 49, 50, 49, 46, 49, 50, 46, 49, 48, 49, 52, 39, 13, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 72, 111, 109, 101, 32, 72, 101, 97, 108, 116, 104, 99, 97, 114, 101, 32, 83, 101, 114, 118, 105, 99, 101, 115, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 52, 54, 52, 46, 49, 48, 48, 51, 46, 49, 48, 49, 46, 49, 50, 46, 49, 48, 49, 54, 39, 13, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 72, 111, 115, 112, 105, 99, 101, 32, 99, 97, 114, 101, 32, 97, 109, 98, 117, 108, 97, 116, 111, 114, 121, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 55, 54, 50, 46, 49, 46, 52, 46, 49, 49, 48, 56, 46, 49, 53, 39, 13, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 79, 102, 102, 105, 99, 101, 32, 86, 105, 115, 105, 116, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 52, 54, 52, 46, 49, 48, 48, 51, 46, 49, 48, 49, 46, 49, 50, 46, 49, 48, 48, 49, 39, 13, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 80, 114, 101, 103, 110, 97, 110, 99, 121, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 53, 50, 54, 46, 51, 46, 51, 55, 56, 39, 13, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 80, 114, 101, 118, 101, 110, 116, 105, 118, 101, 32, 67, 97, 114, 101, 32, 83, 101, 114, 118, 105, 99, 101, 115, 32, 45, 32, 71, 114, 111, 117, 112, 32, 67, 111, 117, 110, 115, 101, 108, 105, 110, 103, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 52, 54, 52, 46, 49, 48, 48, 51, 46, 49, 48, 49, 46, 49, 50, 46, 49, 48, 50, 55, 39, 13, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 80, 114, 101, 118, 101, 110, 116, 105, 118, 101, 32, 67, 97, 114, 101, 32, 83, 101, 114, 118, 105, 99, 101, 115, 44, 32, 73, 110, 105, 116, 105, 97, 108, 32, 79, 102, 102, 105, 99, 101, 32, 86, 105, 115, 105, 116, 44, 32, 48, 32, 116, 111, 32, 49, 55, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 52, 54, 52, 46, 49, 48, 48, 51, 46, 49, 48, 49, 46, 49, 50, 46, 49, 48, 50, 50, 39, 13, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 80, 114, 101, 118, 101, 110, 116, 105, 118, 101, 32, 67, 97, 114, 101, 32, 83, 101, 114, 118, 105, 99, 101, 115, 45, 73, 110, 100, 105, 118, 105, 100, 117, 97, 108, 32, 67, 111, 117, 110, 115, 101, 108, 105, 110, 103, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 52, 54, 52, 46, 49, 48, 48, 51, 46, 49, 48, 49, 46, 49, 50, 46, 49, 48, 50, 54, 39, 13, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 80, 114, 101, 118, 101, 110, 116, 105, 118, 101, 32, 67, 97, 114, 101, 44, 32, 69, 115, 116, 97, 98, 108, 105, 115, 104, 101, 100, 32, 79, 102, 102, 105, 99, 101, 32, 86, 105, 115, 105, 116, 44, 32, 48, 32, 116, 111, 32, 49, 55, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 52, 54, 52, 46, 49, 48, 48, 51, 46, 49, 48, 49, 46, 49, 50, 46, 49, 48, 50, 52, 39, 13, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 84, 101, 108, 101, 112, 104, 111, 110, 101, 32, 86, 105, 115, 105, 116, 115, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 52, 54, 52, 46, 49, 48, 48, 51, 46, 49, 48, 49, 46, 49, 50, 46, 49, 48, 56, 48, 39, 13, 10, 118, 97, 108, 117, 101, 115, 101, 116, 32, 34, 87, 101, 105, 103, 104, 116, 34, 58, 32, 39, 104, 116, 116, 112, 58, 47, 47, 99, 116, 115, 46, 110, 108, 109, 46, 110, 105, 104, 46, 103, 111, 118, 47, 102, 104, 105, 114, 47, 86, 97, 108, 117, 101, 83, 101, 116, 47, 50, 46, 49, 54, 46, 56, 52, 48, 46, 49, 46, 49, 49, 51, 56, 56, 51, 46, 51, 46, 52, 54, 52, 46, 49, 48, 48, 51, 46, 49, 50, 49, 46, 49, 50, 46, 49, 48, 49, 53, 39, 13, 10, 13, 10, 99, 111, 100, 101, 32, 34, 91, 105, 110, 95, 105, 93, 34, 58, 32, 39, 91, 105, 110, 95, 105, 93, 39, 32, 102, 114, 111, 109, 32, 34, 85, 67, 85, 77, 34, 32, 100, 105, 115, 112, 108, 97, 121, 32, 39, 105, 110, 99, 104, 32, 40, 105, 110, 116, 101, 114, 110, 97, 116, 105, 111, 110, 97, 108, 41, 39, 13, 10, 99, 111, 100, 101, 32, 34, 91, 108, 98, 95, 97, 118, 93, 34, 58, 32, 39, 91, 108, 98, 95, 97, 118, 93, 39, 32, 102, 114, 111, 109, 32, 34, 85, 67, 85, 77, 34, 32, 100, 105, 115, 112, 108, 97, 121, 32, 39, 112, 111, 117, 110, 100, 32, 40, 85, 83, 32, 97, 110, 100, 32, 66, 114, 105, 116, 105, 115, 104, 41, 39, 13, 10, 99, 111, 100, 101, 32, 34, 66, 105, 114, 116, 104, 32, 100, 97, 116, 101, 34, 58, 32, 39, 50, 49, 49, 49, 50, 45, 56, 39, 32, 102, 114, 111, 109, 32, 34, 76, 79, 73, 78, 67, 34, 32, 100, 105, 115, 112, 108, 97, 121, 32, 39, 66, 105, 114, 116, 104, 32, 100, 97, 116, 101, 39, 13, 10, 99, 111, 100, 101, 32, 34, 66, 111, 100, 121, 32, 104, 101, 105, 103, 104, 116, 34, 58, 32, 39, 56, 51, 48, 50, 45, 50, 39, 32, 102, 114, 111, 109, 32, 34, 76, 79, 73, 78, 67, 34, 32, 100, 105, 115, 112, 108, 97, 121, 32, 39, 66, 111, 100, 121, 32, 104, 101, 105, 103, 104, 116, 39, 13, 10, 99, 111, 100, 101, 32, 34, 66, 111, 100, 121, 32, 109, 97, 115, 115, 32, 105, 110, 100, 101, 120, 32, 40, 66, 77, 73, 41, 32, 91, 82, 97, 116, 105, 111, 93, 34, 58, 32, 39, 51, 57, 49, 53, 54, 45, 53, 39, 32, 102, 114, 111, 109, 32, 34, 76, 79, 73, 78, 67, 34, 32, 100, 105, 115, 112, 108, 97, 121, 32, 39, 66, 111, 100, 121, 32, 109, 97, 115, 115, 32, 105, 110, 100, 101, 120, 32, 40, 66, 77, 73, 41, 32, 91, 82, 97, 116, 105, 111, 93, 39, 13, 10, 99, 111, 100, 101, 32, 34, 66, 111, 100, 121, 32, 119, 101, 105, 103, 104, 116, 34, 58, 32, 39, 50, 57, 52, 54, 51, 45, 55, 39, 32, 102, 114, 111, 109, 32, 34, 76, 79, 73, 78, 67, 34, 32, 100, 105, 115, 112, 108, 97, 121, 32, 39, 66, 111, 100, 121, 32, 119, 101, 105, 103, 104, 116, 39, 13, 10, 99, 111, 100, 101, 32, 34, 99, 109, 34, 58, 32, 39, 99, 109, 39, 32, 102, 114, 111, 109, 32, 34, 85, 67, 85, 77, 34, 32, 100, 105, 115, 112, 108, 97, 121, 32, 39, 99, 101, 110, 116, 105, 109, 101, 116, 101, 114, 39, 13, 10, 99, 111, 100, 101, 32, 34, 101, 120, 97, 109, 34, 58, 32, 39, 101, 120, 97, 109, 39, 32, 102, 114, 111, 109, 32, 34, 79, 98, 115, 101, 114, 118, 97, 116, 105, 111, 110, 67, 97, 116, 101, 103, 111, 114, 121, 67, 111, 100, 101, 115, 34, 32, 100, 105, 115, 112, 108, 97, 121, 32, 39, 101, 120, 97, 109, 39, 13, 10, 99, 111, 100, 101, 32, 34, 103, 34, 58, 32, 39, 103, 39, 32, 102, 114, 111, 109, 32, 34, 85, 67, 85, 77, 34, 32, 100, 105, 115, 112, 108, 97, 121, 32, 39, 103, 114, 97, 109, 39, 13, 10, 99, 111, 100, 101, 32, 34, 107, 103, 34, 58, 32, 39, 107, 103, 39, 32, 102, 114, 111, 109, 32, 34, 85, 67, 85, 77, 34, 32, 100, 105, 115, 112, 108, 97, 121, 32, 39, 107, 105, 108, 111, 103, 114, 97, 109, 39, 13, 10, 99, 111, 100, 101, 32, 34, 118, 105, 116, 97, 108, 45, 115, 105, 103, 110, 115, 34, 58, 32, 39, 118, 105, 116, 97, 108, 45, 115, 105, 103, 110, 115, 39, 32, 102, 114, 111, 109, 32, 34, 79, 98, 115, 101, 114, 118, 97, 116, 105, 111, 110, 67, 97, 116, 101, 103, 111, 114, 121, 67, 111, 100, 101, 115, 34, 32, 100, 105, 115, 112, 108, 97, 121, 32, 39, 86, 105, 116, 97, 108, 32, 83, 105, 103, 110, 115, 39, 13, 10, 13, 10, 112, 97, 114, 97, 109, 101, 116, 101, 114, 32, 34, 77, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 32, 80, 101, 114, 105, 111, 100, 34, 32, 73, 110, 116, 101, 114, 118, 97, 108, 60, 68, 97, 116, 101, 84, 105, 109, 101, 62, 13, 10, 13, 10, 99, 111, 110, 116, 101, 120, 116, 32, 80, 97, 116, 105, 101, 110, 116, 13, 10, 13, 10, 100, 101, 102, 105, 110, 101, 32, 34, 83, 68, 69, 32, 69, 116, 104, 110, 105, 99, 105, 116, 121, 34, 58, 13, 10, 32, 32, 83, 68, 69, 46, 34, 83, 68, 69, 32, 69, 116, 104, 110, 105, 99, 105, 116, 121, 34, 13, 10, 13, 10, 100, 101, 102, 105, 110, 101, 32, 34, 83, 68, 69, 32, 80, 97, 121, 101, 114, 34, 58, 13, 10, 32, 32, 83, 68, 69, 46, 34, 83, 68, 69, 32, 80, 97, 121, 101, 114, 34, 13, 10, 13, 10, 100, 101, 102, 105, 110, 101, 32, 34, 83, 68, 69, 32, 82, 97, 99, 101, 34, 58, 13, 10, 32, 32, 83, 68, 69, 46, 34, 83, 68, 69, 32, 82, 97, 99, 101, 34, 13, 10, 13, 10, 100, 101, 102, 105, 110, 101, 32, 34, 83, 68, 69, 32, 83, 101, 120, 34, 58, 13, 10, 32, 32, 83, 68, 69, 46, 34, 83, 68, 69, 32, 83, 101, 120, 34, 13, 10, 13, 10, 100, 101, 102, 105, 110, 101, 32, 34, 73, 110, 105, 116, 105, 97, 108, 32, 80, 111, 112, 117, 108, 97, 116, 105, 111, 110, 34, 58, 13, 10, 32, 32, 65, 103, 101, 73, 110, 89, 101, 97, 114, 115, 65, 116, 40, 100, 97, 116, 101, 32, 102, 114, 111, 109, 32, 13, 10, 32, 32, 32, 32, 101, 110, 100, 32, 111, 102, 32, 34, 77, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 32, 80, 101, 114, 105, 111, 100, 34, 13, 10, 32, 32, 41, 32, 105, 110, 32, 73, 110, 116, 101, 114, 118, 97, 108, 91, 51, 44, 32, 49, 55, 93, 13, 10, 32, 32, 32, 32, 97, 110, 100, 32, 101, 120, 105, 115, 116, 115, 32, 40, 32, 34, 81, 117, 97, 108, 105, 102, 121, 105, 110, 103, 32, 69, 110, 99, 111, 117, 110, 116, 101, 114, 34, 32, 41, 13, 10, 13, 10, 100, 101, 102, 105, 110, 101, 32, 34, 68, 101, 110, 111, 109, 105, 110, 97, 116, 111, 114, 34, 58, 13, 10, 32, 32, 34, 73, 110, 105, 116, 105, 97, 108, 32, 80, 111, 112, 117, 108, 97, 116, 105, 111, 110, 34, 13, 10, 13, 10, 100, 101, 102, 105, 110, 101, 32, 34, 68, 101, 110, 111, 109, 105, 110, 97, 116, 111, 114, 32, 69, 120, 99, 108, 117, 115, 105, 111, 110, 115, 34, 58, 13, 10, 32, 32, 72, 111, 115, 112, 105, 99, 101, 46, 34, 72, 97, 115, 32, 72, 111, 115, 112, 105, 99, 101, 32, 83, 101, 114, 118, 105, 99, 101, 115, 34, 13, 10, 32, 32, 32, 32, 111, 114, 32, 101, 120, 105, 115, 116, 115, 32, 40, 32, 34, 80, 114, 101, 103, 110, 97, 110, 99, 121, 32, 68, 105, 97, 103, 110, 111, 115, 105, 115, 32, 87, 104, 105, 99, 104, 32, 79, 118, 101, 114, 108, 97, 112, 115, 32, 77, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 32, 80, 101, 114, 105, 111, 100, 34, 32, 41, 13, 10, 13, 10, 100, 101, 102, 105, 110, 101, 32, 34, 80, 114, 101, 103, 110, 97, 110, 99, 121, 32, 68, 105, 97, 103, 110, 111, 115, 105, 115, 32, 87, 104, 105, 99, 104, 32, 79, 118, 101, 114, 108, 97, 112, 115, 32, 77, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 32, 80, 101, 114, 105, 111, 100, 34, 58, 13, 10, 32, 32, 40, 32, 83, 116, 97, 116, 117, 115, 46, 34, 65, 99, 116, 105, 118, 101, 32, 67, 111, 110, 100, 105, 116, 105, 111, 110, 34, 32, 40, 32, 91, 67, 111, 110, 100, 105, 116, 105, 111, 110, 58, 32, 34, 80, 114, 101, 103, 110, 97, 110, 99, 121, 34, 93, 32, 41, 32, 41, 32, 80, 114, 101, 103, 110, 97, 110, 99, 121, 13, 10, 32, 32, 32, 32, 119, 104, 101, 114, 101, 32, 81, 73, 67, 111, 114, 101, 67, 111, 109, 109, 111, 110, 46, 34, 84, 111, 80, 114, 101, 118, 97, 108, 101, 110, 99, 101, 73, 110, 116, 101, 114, 118, 97, 108, 34, 32, 40, 32, 80, 114, 101, 103, 110, 97, 110, 99, 121, 32, 41, 32, 111, 118, 101, 114, 108, 97, 112, 115, 32, 34, 77, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 32, 80, 101, 114, 105, 111, 100, 34, 13, 10, 13, 10, 100, 101, 102, 105, 110, 101, 32, 34, 78, 117, 109, 101, 114, 97, 116, 111, 114, 32, 49, 34, 58, 13, 10, 32, 32, 101, 120, 105, 115, 116, 115, 32, 40, 32, 34, 66, 77, 73, 32, 80, 101, 114, 99, 101, 110, 116, 105, 108, 101, 32, 105, 110, 32, 77, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 32, 80, 101, 114, 105, 111, 100, 34, 32, 41, 13, 10, 32, 32, 32, 32, 97, 110, 100, 32, 101, 120, 105, 115, 116, 115, 32, 40, 32, 34, 72, 101, 105, 103, 104, 116, 32, 105, 110, 32, 77, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 32, 80, 101, 114, 105, 111, 100, 34, 32, 41, 13, 10, 32, 32, 32, 32, 97, 110, 100, 32, 101, 120, 105, 115, 116, 115, 32, 40, 32, 34, 87, 101, 105, 103, 104, 116, 32, 105, 110, 32, 77, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 32, 80, 101, 114, 105, 111, 100, 34, 32, 41, 13, 10, 13, 10, 100, 101, 102, 105, 110, 101, 32, 34, 78, 117, 109, 101, 114, 97, 116, 111, 114, 32, 50, 34, 58, 13, 10, 32, 32, 101, 120, 105, 115, 116, 115, 32, 40, 32, 83, 116, 97, 116, 117, 115, 46, 34, 67, 111, 109, 112, 108, 101, 116, 101, 100, 32, 80, 114, 111, 99, 101, 100, 117, 114, 101, 34, 32, 40, 32, 91, 80, 114, 111, 99, 101, 100, 117, 114, 101, 58, 32, 34, 67, 111, 117, 110, 115, 101, 108, 105, 110, 103, 32, 102, 111, 114, 32, 78, 117, 116, 114, 105, 116, 105, 111, 110, 34, 93, 32, 41, 32, 41, 32, 78, 117, 116, 114, 105, 116, 105, 111, 110, 67, 111, 117, 110, 115, 101, 108, 105, 110, 103, 13, 10, 32, 32, 32, 32, 119, 104, 101, 114, 101, 32, 81, 73, 67, 111, 114, 101, 67, 111, 109, 109, 111, 110, 46, 34, 84, 111, 73, 110, 116, 101, 114, 118, 97, 108, 34, 32, 40, 32, 78, 117, 116, 114, 105, 116, 105, 111, 110, 67, 111, 117, 110, 115, 101, 108, 105, 110, 103, 46, 112, 101, 114, 102, 111, 114, 109, 101, 100, 32, 41, 32, 100, 117, 114, 105, 110, 103, 32, 100, 97, 121, 32, 111, 102, 32, 34, 77, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 32, 80, 101, 114, 105, 111, 100, 34, 13, 10, 13, 10, 100, 101, 102, 105, 110, 101, 32, 34, 78, 117, 109, 101, 114, 97, 116, 111, 114, 32, 51, 34, 58, 13, 10, 32, 32, 101, 120, 105, 115, 116, 115, 32, 40, 32, 83, 116, 97, 116, 117, 115, 46, 34, 67, 111, 109, 112, 108, 101, 116, 101, 100, 32, 80, 114, 111, 99, 101, 100, 117, 114, 101, 34, 32, 40, 32, 91, 80, 114, 111, 99, 101, 100, 117, 114, 101, 58, 32, 34, 67, 111, 117, 110, 115, 101, 108, 105, 110, 103, 32, 102, 111, 114, 32, 80, 104, 121, 115, 105, 99, 97, 108, 32, 65, 99, 116, 105, 118, 105, 116, 121, 34, 93, 32, 41, 32, 41, 32, 65, 99, 116, 105, 118, 105, 116, 121, 67, 111, 117, 110, 115, 101, 108, 105, 110, 103, 13, 10, 32, 32, 32, 32, 119, 104, 101, 114, 101, 32, 81, 73, 67, 111, 114, 101, 67, 111, 109, 109, 111, 110, 46, 34, 84, 111, 73, 110, 116, 101, 114, 118, 97, 108, 34, 32, 40, 32, 65, 99, 116, 105, 118, 105, 116, 121, 67, 111, 117, 110, 115, 101, 108, 105, 110, 103, 46, 112, 101, 114, 102, 111, 114, 109, 101, 100, 32, 41, 32, 100, 117, 114, 105, 110, 103, 32, 100, 97, 121, 32, 111, 102, 32, 34, 77, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 32, 80, 101, 114, 105, 111, 100, 34, 13, 10, 13, 10, 100, 101, 102, 105, 110, 101, 32, 34, 83, 116, 114, 97, 116, 105, 102, 97, 99, 116, 105, 111, 110, 32, 49, 34, 58, 13, 10, 32, 32, 65, 103, 101, 73, 110, 89, 101, 97, 114, 115, 65, 116, 40, 100, 97, 116, 101, 32, 102, 114, 111, 109, 32, 13, 10, 32, 32, 32, 32, 101, 110, 100, 32, 111, 102, 32, 34, 77, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 32, 80, 101, 114, 105, 111, 100, 34, 13, 10, 32, 32, 41, 32, 105, 110, 32, 73, 110, 116, 101, 114, 118, 97, 108, 91, 51, 44, 32, 49, 49, 93, 13, 10, 13, 10, 100, 101, 102, 105, 110, 101, 32, 34, 83, 116, 114, 97, 116, 105, 102, 97, 99, 116, 105, 111, 110, 32, 50, 34, 58, 13, 10, 32, 32, 65, 103, 101, 73, 110, 89, 101, 97, 114, 115, 65, 116, 40, 100, 97, 116, 101, 32, 102, 114, 111, 109, 32, 13, 10, 32, 32, 32, 32, 101, 110, 100, 32, 111, 102, 32, 34, 77, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 32, 80, 101, 114, 105, 111, 100, 34, 13, 10, 32, 32, 41, 32, 105, 110, 32, 73, 110, 116, 101, 114, 118, 97, 108, 91, 49, 50, 44, 32, 49, 55, 93, 13, 10, 13, 10, 100, 101, 102, 105, 110, 101, 32, 34, 81, 117, 97, 108, 105, 102, 121, 105, 110, 103, 32, 69, 110, 99, 111, 117, 110, 116, 101, 114, 34, 58, 13, 10, 32, 32, 40, 32, 83, 116, 97, 116, 117, 115, 46, 34, 70, 105, 110, 105, 115, 104, 101, 100, 32, 69, 110, 99, 111, 117, 110, 116, 101, 114, 34, 32, 40, 32, 40, 32, 91, 69, 110, 99, 111, 117, 110, 116, 101, 114, 58, 32, 34, 79, 102, 102, 105, 99, 101, 32, 86, 105, 115, 105, 116, 34, 93, 13, 10, 32, 32, 32, 32, 32, 32, 117, 110, 105, 111, 110, 32, 91, 69, 110, 99, 111, 117, 110, 116, 101, 114, 58, 32, 34, 80, 114, 101, 118, 101, 110, 116, 105, 118, 101, 32, 67, 97, 114, 101, 32, 83, 101, 114, 118, 105, 99, 101, 115, 45, 73, 110, 100, 105, 118, 105, 100, 117, 97, 108, 32, 67, 111, 117, 110, 115, 101, 108, 105, 110, 103, 34, 93, 13, 10, 32, 32, 32, 32, 32, 32, 117, 110, 105, 111, 110, 32, 91, 69, 110, 99, 111, 117, 110, 116, 101, 114, 58, 32, 34, 80, 114, 101, 118, 101, 110, 116, 105, 118, 101, 32, 67, 97, 114, 101, 32, 83, 101, 114, 118, 105, 99, 101, 115, 44, 32, 73, 110, 105, 116, 105, 97, 108, 32, 79, 102, 102, 105, 99, 101, 32, 86, 105, 115, 105, 116, 44, 32, 48, 32, 116, 111, 32, 49, 55, 34, 93, 13, 10, 32, 32, 32, 32, 32, 32, 117, 110, 105, 111, 110, 32, 91, 69, 110, 99, 111, 117, 110, 116, 101, 114, 58, 32, 34, 80, 114, 101, 118, 101, 110, 116, 105, 118, 101, 32, 67, 97, 114, 101, 44, 32, 69, 115, 116, 97, 98, 108, 105, 115, 104, 101, 100, 32, 79, 102, 102, 105, 99, 101, 32, 86, 105, 115, 105, 116, 44, 32, 48, 32, 116, 111, 32, 49, 55, 34, 93, 13, 10, 32, 32, 32, 32, 32, 32, 117, 110, 105, 111, 110, 32, 91, 69, 110, 99, 111, 117, 110, 116, 101, 114, 58, 32, 34, 80, 114, 101, 118, 101, 110, 116, 105, 118, 101, 32, 67, 97, 114, 101, 32, 83, 101, 114, 118, 105, 99, 101, 115, 32, 45, 32, 71, 114, 111, 117, 112, 32, 67, 111, 117, 110, 115, 101, 108, 105, 110, 103, 34, 93, 13, 10, 32, 32, 32, 32, 32, 32, 117, 110, 105, 111, 110, 32, 91, 69, 110, 99, 111, 117, 110, 116, 101, 114, 58, 32, 34, 72, 111, 109, 101, 32, 72, 101, 97, 108, 116, 104, 99, 97, 114, 101, 32, 83, 101, 114, 118, 105, 99, 101, 115, 34, 93, 13, 10, 32, 32, 32, 32, 32, 32, 117, 110, 105, 111, 110, 32, 91, 69, 110, 99, 111, 117, 110, 116, 101, 114, 58, 32, 34, 84, 101, 108, 101, 112, 104, 111, 110, 101, 32, 86, 105, 115, 105, 116, 115, 34, 93, 13, 10, 32, 32, 41, 32, 41, 32, 41, 32, 86, 97, 108, 105, 100, 69, 110, 99, 111, 117, 110, 116, 101, 114, 115, 13, 10, 32, 32, 32, 32, 119, 104, 101, 114, 101, 32, 81, 73, 67, 111, 114, 101, 67, 111, 109, 109, 111, 110, 46, 34, 84, 111, 73, 110, 116, 101, 114, 118, 97, 108, 34, 32, 40, 32, 86, 97, 108, 105, 100, 69, 110, 99, 111, 117, 110, 116, 101, 114, 115, 46, 112, 101, 114, 105, 111, 100, 32, 41, 32, 100, 117, 114, 105, 110, 103, 32, 34, 77, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 32, 80, 101, 114, 105, 111, 100, 34, 13, 10, 13, 10, 100, 101, 102, 105, 110, 101, 32, 34, 72, 101, 105, 103, 104, 116, 32, 105, 110, 32, 77, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 32, 80, 101, 114, 105, 111, 100, 34, 58, 13, 10, 32, 32, 40, 32, 83, 116, 97, 116, 117, 115, 46, 34, 66, 111, 100, 121, 72, 101, 105, 103, 104, 116, 34, 32, 40, 32, 91, 34, 111, 98, 115, 101, 114, 118, 97, 116, 105, 111, 110, 45, 98, 111, 100, 121, 104, 101, 105, 103, 104, 116, 34, 93, 32, 41, 32, 41, 32, 72, 101, 105, 103, 104, 116, 13, 10, 32, 32, 32, 32, 119, 104, 101, 114, 101, 32, 81, 73, 67, 111, 114, 101, 67, 111, 109, 109, 111, 110, 46, 34, 84, 111, 73, 110, 116, 101, 114, 118, 97, 108, 34, 32, 40, 32, 72, 101, 105, 103, 104, 116, 46, 101, 102, 102, 101, 99, 116, 105, 118, 101, 32, 41, 32, 100, 117, 114, 105, 110, 103, 32, 100, 97, 121, 32, 111, 102, 32, 34, 77, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 32, 80, 101, 114, 105, 111, 100, 34, 13, 10, 32, 32, 32, 32, 32, 32, 97, 110, 100, 32, 72, 101, 105, 103, 104, 116, 46, 118, 97, 108, 117, 101, 32, 105, 115, 32, 110, 111, 116, 32, 110, 117, 108, 108, 13, 10, 13, 10, 100, 101, 102, 105, 110, 101, 32, 34, 87, 101, 105, 103, 104, 116, 32, 105, 110, 32, 77, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 32, 80, 101, 114, 105, 111, 100, 34, 58, 13, 10, 32, 32, 40, 32, 83, 116, 97, 116, 117, 115, 46, 34, 66, 111, 100, 121, 87, 101, 105, 103, 104, 116, 34, 32, 40, 32, 91, 34, 111, 98, 115, 101, 114, 118, 97, 116, 105, 111, 110, 45, 98, 111, 100, 121, 119, 101, 105, 103, 104, 116, 34, 93, 32, 41, 32, 41, 32, 87, 101, 105, 103, 104, 116, 13, 10, 32, 32, 32, 32, 119, 104, 101, 114, 101, 32, 81, 73, 67, 111, 114, 101, 67, 111, 109, 109, 111, 110, 46, 34, 84, 111, 73, 110, 116, 101, 114, 118, 97, 108, 34, 32, 40, 32, 87, 101, 105, 103, 104, 116, 46, 101, 102, 102, 101, 99, 116, 105, 118, 101, 32, 41, 32, 100, 117, 114, 105, 110, 103, 32, 100, 97, 121, 32, 111, 102, 32, 34, 77, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 32, 80, 101, 114, 105, 111, 100, 34, 13, 10, 32, 32, 32, 32, 32, 32, 97, 110, 100, 32, 87, 101, 105, 103, 104, 116, 46, 118, 97, 108, 117, 101, 32, 105, 115, 32, 110, 111, 116, 32, 110, 117, 108, 108, 13, 10, 13, 10, 100, 101, 102, 105, 110, 101, 32, 34, 66, 77, 73, 32, 80, 101, 114, 99, 101, 110, 116, 105, 108, 101, 32, 105, 110, 32, 77, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 32, 80, 101, 114, 105, 111, 100, 34, 58, 13, 10, 32, 32, 40, 32, 83, 116, 97, 116, 117, 115, 46, 34, 66, 77, 73, 34, 32, 40, 32, 91, 34, 111, 98, 115, 101, 114, 118, 97, 116, 105, 111, 110, 45, 98, 109, 105, 34, 93, 32, 41, 32, 41, 32, 66, 77, 73, 80, 101, 114, 99, 101, 110, 116, 105, 108, 101, 13, 10, 32, 32, 32, 32, 119, 104, 101, 114, 101, 32, 81, 73, 67, 111, 114, 101, 67, 111, 109, 109, 111, 110, 46, 34, 84, 111, 73, 110, 116, 101, 114, 118, 97, 108, 34, 32, 40, 32, 66, 77, 73, 80, 101, 114, 99, 101, 110, 116, 105, 108, 101, 46, 101, 102, 102, 101, 99, 116, 105, 118, 101, 32, 41, 32, 100, 117, 114, 105, 110, 103, 32, 100, 97, 121, 32, 111, 102, 32, 34, 77, 101, 97, 115, 117, 114, 101, 109, 101, 110, 116, 32, 80, 101, 114, 105, 111, 100, 34, 13, 10, 32, 32, 32, 32, 32, 32, 97, 110, 100, 32, 66, 77, 73, 80, 101, 114, 99, 101, 110, 116, 105, 108, 101, 46, 118, 97, 108, 117, 101, 32, 105, 115, 32, 110, 111, 116, 32, 110, 117, 108, 108]</code></pre> \n                        </td> \n                     </tr> \n                  </table> \n               </td> \n            </tr> \n         </table> \n      </div>"
  },
  "contained": [ {
    "resourceType": "Parameters",
    "id": "options",
    "parameter": [ {
      "name": "translatorVersion",
      "valueString": "3.5.1"
    }, {
      "name": "option",
      "valueString": "EnableAnnotations"
    }, {
      "name": "option",
      "valueString": "EnableLocators"
    }, {
      "name": "option",
      "valueString": "DisableListDemotion"
    }, {
      "name": "option",
      "valueString": "DisableListPromotion"
    }, {
      "name": "format",
      "valueString": "XML"
    }, {
      "name": "format",
      "valueString": "JSON"
    }, {
      "name": "analyzeDataRequirements",
      "valueBoolean": true
    }, {
      "name": "collapseDataRequirements",
      "valueBoolean": true
    }, {
      "name": "compatibilityLevel",
      "valueString": "1.5"
    }, {
      "name": "enableCqlOnly",
      "valueBoolean": false
    }, {
      "name": "errorLevel",
      "valueString": "Info"
    }, {
      "name": "signatureLevel",
      "valueString": "None"
    }, {
      "name": "validateUnits",
      "valueBoolean": true
    }, {
      "name": "verifyOnly",
      "valueBoolean": false
    } ]
  } ],
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-directReferenceCode",
    "valueCoding": {
      "system": "http://unitsofmeasure.org",
      "code": "[in_i]",
      "display": "[in_i]"
    }
  }, {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-directReferenceCode",
    "valueCoding": {
      "system": "http://unitsofmeasure.org",
      "code": "[lb_av]",
      "display": "[lb_av]"
    }
  }, {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-directReferenceCode",
    "valueCoding": {
      "system": "http://loinc.org",
      "code": "21112-8",
      "display": "Birth date"
    }
  }, {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-directReferenceCode",
    "valueCoding": {
      "system": "http://loinc.org",
      "code": "8302-2",
      "display": "Body height"
    }
  }, {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-directReferenceCode",
    "valueCoding": {
      "system": "http://loinc.org",
      "code": "39156-5",
      "display": "Body mass index (BMI) [Ratio]"
    }
  }, {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-directReferenceCode",
    "valueCoding": {
      "system": "http://loinc.org",
      "code": "29463-7",
      "display": "Body weight"
    }
  }, {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-directReferenceCode",
    "valueCoding": {
      "system": "http://unitsofmeasure.org",
      "code": "cm",
      "display": "cm"
    }
  }, {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-directReferenceCode",
    "valueCoding": {
      "system": "http://terminology.hl7.org/CodeSystem/observation-category",
      "code": "exam",
      "display": "exam"
    }
  }, {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-directReferenceCode",
    "valueCoding": {
      "system": "http://unitsofmeasure.org",
      "code": "g",
      "display": "g"
    }
  }, {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-directReferenceCode",
    "valueCoding": {
      "system": "http://unitsofmeasure.org",
      "code": "kg",
      "display": "kg"
    }
  }, {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-directReferenceCode",
    "valueCoding": {
      "system": "http://terminology.hl7.org/CodeSystem/observation-category",
      "code": "vital-signs",
      "display": "vital-signs"
    }
  }, {
    "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlOptions",
    "valueReference": {
      "reference": "#options"
    }
  }, {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "https://madie.cms.gov/Library/WeightAssessmentandCounselingforNutritionandPhysicalActivityforChildrenandAdolescentsFHIR",
  "identifier": [ {
    "use": "official",
    "system": "https://madie.cms.gov/login",
    "value": "WeightAssessmentandCounselingforNutritionandPhysicalActivityforChildrenandAdolescentsFHIR"
  } ],
  "version": "0.1.000",
  "name": "WeightAssessmentandCounselingforNutritionandPhysicalActivityforChildrenandAdolescentsFHIR",
  "title": "WeightAssessmentandCounselingforNutritionandPhysicalActivityforChildrenandAdolescentsFHIR",
  "status": "active",
  "experimental": false,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "date": "2023-11-29T03:16:05+00:00",
  "description": "WeightAssessmentandCounselingforNutritionandPhysicalActivityforChildrenandAdolescentsFHIR",
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "QICore model information",
    "resource": "http://hl7.org/fhir/Library/QICore-ModelInfo"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://ecqi.healthit.gov/ecqms/Library/FHIRHelpers|4.3.000"
  }, {
    "type": "depends-on",
    "display": "Library QICoreCommon",
    "resource": "http://ecqi.healthit.gov/ecqms/Library/QICoreCommon|2.0.000"
  }, {
    "type": "depends-on",
    "display": "Library SDE",
    "resource": "http://ecqi.healthit.gov/ecqms/Library/SupplementalDataElements|3.4.000"
  }, {
    "type": "depends-on",
    "display": "Library Hospice",
    "resource": "http://ecqi.healthit.gov/ecqms/Library/Hospice|6.9.000"
  }, {
    "type": "depends-on",
    "display": "Library Status",
    "resource": "http://ecqi.healthit.gov/ecqms/Library/Status|1.6.000"
  }, {
    "type": "depends-on",
    "display": "Code system UCUM",
    "resource": "http://unitsofmeasure.org"
  }, {
    "type": "depends-on",
    "display": "Code system LOINC",
    "resource": "http://loinc.org"
  }, {
    "type": "depends-on",
    "display": "Code system ObservationCategoryCodes",
    "resource": "http://terminology.hl7.org/CodeSystem/observation-category"
  }, {
    "type": "depends-on",
    "display": "Code system ConditionClinicalStatusCodes",
    "resource": "http://terminology.hl7.org/CodeSystem/condition-clinical"
  }, {
    "type": "depends-on",
    "display": "Code system SNOMEDCT",
    "resource": "http://snomed.info/sct"
  }, {
    "type": "depends-on",
    "display": "Value set BMI percentile",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.121.12.1012"
  }, {
    "type": "depends-on",
    "display": "Value set Counseling for Nutrition",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.195.12.1003"
  }, {
    "type": "depends-on",
    "display": "Value set Counseling for Physical Activity",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.118.12.1035"
  }, {
    "type": "depends-on",
    "display": "Value set Discharged to Health Care Facility for Hospice Care",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.207"
  }, {
    "type": "depends-on",
    "display": "Value set Discharged to Home for Hospice Care",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.209"
  }, {
    "type": "depends-on",
    "display": "Value set Encounter Inpatient",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.666.5.307"
  }, {
    "type": "depends-on",
    "display": "Value set Height",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.121.12.1014"
  }, {
    "type": "depends-on",
    "display": "Value set Home Healthcare Services",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1016"
  }, {
    "type": "depends-on",
    "display": "Value set Hospice care ambulatory",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1108.15"
  }, {
    "type": "depends-on",
    "display": "Value set Office Visit",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1001"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.378"
  }, {
    "type": "depends-on",
    "display": "Value set Preventive Care Services - Group Counseling",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1027"
  }, {
    "type": "depends-on",
    "display": "Value set Preventive Care Services, Initial Office Visit, 0 to 17",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1022"
  }, {
    "type": "depends-on",
    "display": "Value set Preventive Care Services-Individual Counseling",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1026"
  }, {
    "type": "depends-on",
    "display": "Value set Preventive Care, Established Office Visit, 0 to 17",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1024"
  }, {
    "type": "depends-on",
    "display": "Value set Telephone Visits",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1080"
  }, {
    "type": "depends-on",
    "display": "Value set Weight",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.121.12.1015"
  }, {
    "type": "depends-on",
    "display": "Value set Payer Type",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.114222.4.11.3591"
  }, {
    "type": "depends-on",
    "display": "Value set Hospice Encounter",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.1003"
  }, {
    "type": "depends-on",
    "display": "Value set Hospice Care Ambulatory",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1584"
  }, {
    "type": "depends-on",
    "display": "Value set Hospice Diagnosis",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.1165"
  } ],
  "parameter": [ {
    "name": "Measurement Period",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "Period"
  }, {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "SDE Ethnicity",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "SDE Payer",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "name": "SDE Race",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "name": "SDE Sex",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Coding"
  }, {
    "name": "Qualifying Encounter",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "name": "Initial Population",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Denominator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Pregnancy Diagnosis Which Overlaps Measurement Period",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "name": "Denominator Exclusions",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "BMI Percentile in Measurement Period",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "name": "Height in Measurement Period",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "name": "Weight in Measurement Period",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "name": "Numerator 1",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Numerator 2",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Numerator 3",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Stratifaction 1",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Stratifaction 2",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-patient" ],
    "mustSupport": [ "ethnicity", "race" ]
  }, {
    "type": "Coverage",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-coverage" ],
    "mustSupport": [ "type", "period" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.114222.4.11.3591"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter" ],
    "mustSupport": [ "type", "status", "status.value", "period" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1001"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter" ],
    "mustSupport": [ "type", "status", "status.value", "period" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1026"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter" ],
    "mustSupport": [ "type", "status", "status.value", "period" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1022"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter" ],
    "mustSupport": [ "type", "status", "status.value", "period" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1024"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter" ],
    "mustSupport": [ "type", "status", "status.value", "period" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1027"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter" ],
    "mustSupport": [ "type", "status", "status.value", "period" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1016"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter" ],
    "mustSupport": [ "type", "status", "status.value", "period" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1080"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter" ],
    "mustSupport": [ "type", "hospitalization", "hospitalization.dischargeDisposition", "period", "status", "status.value" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.666.5.307"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter" ],
    "mustSupport": [ "type", "period", "status", "status.value" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.1003"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-condition" ],
    "mustSupport": [ "code", "clinicalStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.378"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-condition" ],
    "mustSupport": [ "code", "clinicalStatus" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.1165"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-observation" ],
    "mustSupport": [ "code", "value", "effective", "status", "status.value", "category" ],
    "codeFilter": [ {
      "path": "code",
      "code": [ {
        "system": "http://loinc.org",
        "code": "45755-6",
        "display": "Hospice care [Minimum Data Set]"
      } ]
    }, {
      "path": "value"
    } ]
  }, {
    "type": "ServiceRequest",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-servicerequest" ],
    "mustSupport": [ "code", "authoredOn", "authoredOn.value", "status", "status.value", "intent", "intent.value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1584"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-procedure" ],
    "mustSupport": [ "code", "performed", "status", "status.value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1584"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-procedure" ],
    "mustSupport": [ "code", "performed", "status", "status.value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.195.12.1003"
    } ]
  }, {
    "type": "Procedure",
    "profile": [ "http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-procedure" ],
    "mustSupport": [ "code", "performed", "status", "status.value" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.118.12.1035"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/bmi" ],
    "mustSupport": [ "effective", "value", "status", "status.value" ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/bodyheight" ],
    "mustSupport": [ "effective", "value", "status", "status.value" ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/bodyweight" ],
    "mustSupport": [ "effective", "value", "status", "status.value" ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
  } ]
}